
    var pageVueRenderFn = function anonymous(
) {
with(this){return _c('div',{attrs:{"id":"app"}},[_c('header',{attrs:{"sticky":""}},[_c('navbar',{attrs:{"type":"dark"},scopedSlots:_u([{key:"brand",fn:function(){return [_c('a',{staticClass:"navbar-brand",attrs:{"href":"/tp/index.html","title":"Home"}},[_v("NovaCare")])]},proxy:true},{key:"right",fn:function(){return [_c('li',[_c('form',{staticClass:"navbar-form"},[_c('searchbar',{attrs:{"data":searchData,"placeholder":"Search","on-hit":searchCallback,"menu-align-right":""}})],1)])]},proxy:true}])},[_v(" "),_c('li',[_c('a',{staticClass:"nav-link",attrs:{"href":"/tp/index.html"}},[_v("Home")])]),_v(" "),_c('li',[_c('a',{staticClass:"nav-link",attrs:{"href":"/tp/UserGuide.html"}},[_v("User Guide")])]),_v(" "),_c('li',[_c('a',{staticClass:"nav-link",attrs:{"href":"/tp/DeveloperGuide.html"}},[_v("Developer Guide")])]),_v(" "),_c('li',[_c('a',{staticClass:"nav-link",attrs:{"href":"/tp/AboutUs.html"}},[_v("About Us")])]),_v(" "),_c('li',[_c('a',{staticClass:"nav-link",attrs:{"href":"https://github.com/se-edu/addressbook-level3","target":"_blank"}},[_c('span',[_c('span',{staticClass:"fab fa-github",attrs:{"aria-hidden":"true"}})])])])])],1),_v(" "),_c('div',{attrs:{"id":"flex-body"}},[_c('overlay-source',{attrs:{"id":"site-nav","tag-name":"nav","to":"site-nav"}},[_c('div',{staticClass:"site-nav-top"},[_c('div',{staticClass:"fw-bold mb-2",staticStyle:{"font-size":"1.25rem"}},[_v("Site Map")])]),_v(" "),_c('div',{staticClass:"nav-component slim-scroll"},[_c('site-nav',[_c('overlay-source',{staticClass:"site-nav-list site-nav-list-root",attrs:{"tag-name":"ul","to":"mb-site-nav"}},[_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-0",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('a',{attrs:{"href":"/tp/index.html"}},[_v("Home")])])]),_v(" "),_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-0",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('a',{attrs:{"href":"/tp/UserGuide.html"}},[_v("User Guide")]),_v(" "),_c('div',{staticClass:"site-nav-dropdown-btn-container"},[_c('i',{staticClass:"site-nav-dropdown-btn-icon site-nav-rotate-icon",attrs:{"onclick":"handleSiteNavClick(this.parentNode.parentNode, false); event.stopPropagation();"}},[_c('span',{staticClass:"glyphicon glyphicon-menu-down",attrs:{"aria-hidden":"true"}})])])]),_c('ul',{staticClass:"site-nav-dropdown-container site-nav-dropdown-container-open site-nav-list"},[_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-1",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('a',{attrs:{"href":"/tp/UserGuide.html#quick-start"}},[_v("Quick Start")])])]),_v(" "),_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-1",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('a',{attrs:{"href":"/tp/UserGuide.html#how-to-use-novacare"}},[_v("How To Use NovaCare")])])]),_v(" "),_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-1",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('a',{attrs:{"href":"/tp/UserGuide.html#features"}},[_v("Features")])])]),_v(" "),_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-1",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('a',{attrs:{"href":"/tp/UserGuide.html#faq"}},[_v("FAQ")])])]),_v(" "),_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-1",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('a',{attrs:{"href":"/tp/UserGuide.html#known-issues"}},[_v("Known Issues")])])]),_v(" "),_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-1",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('a',{attrs:{"href":"/tp/UserGuide.html#faq"}},[_v("Command Summary")])])])])]),_v(" "),_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-0",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('a',{attrs:{"href":"/tp/DeveloperGuide.html"}},[_v("Developer Guide")]),_v(" "),_c('div',{staticClass:"site-nav-dropdown-btn-container"},[_c('i',{staticClass:"site-nav-dropdown-btn-icon site-nav-rotate-icon",attrs:{"onclick":"handleSiteNavClick(this.parentNode.parentNode, false); event.stopPropagation();"}},[_c('span',{staticClass:"glyphicon glyphicon-menu-down",attrs:{"aria-hidden":"true"}})])])]),_c('ul',{staticClass:"site-nav-dropdown-container site-nav-dropdown-container-open site-nav-list"},[_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-1",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('a',{attrs:{"href":"/tp/DeveloperGuide.html#acknowledgements"}},[_v("Acknowledgements")])])]),_v(" "),_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-1",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('a',{attrs:{"href":"/tp/DeveloperGuide.html#setting-up-getting-started"}},[_v("Setting Up")])])]),_v(" "),_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-1",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('a',{attrs:{"href":"/tp/DeveloperGuide.html#design"}},[_v("Design")])])]),_v(" "),_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-1",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('a',{attrs:{"href":"/tp/DeveloperGuide.html#implementation"}},[_v("Implementation")])])]),_v(" "),_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-1",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('a',{attrs:{"href":"/tp/DeveloperGuide.html#documentation-logging-testing-configuration-dev-ops"}},[_v("Documentation, logging, testing, configuration, dev-ops")])])]),_v(" "),_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-1",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('a',{attrs:{"href":"/tp/DeveloperGuide.html#appendix-requirements"}},[_v("Appendix: Requirements")])])]),_v(" "),_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-1",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('a',{attrs:{"href":"/tp/DeveloperGuide.html#appendix-instructions-for-manual-testing"}},[_v("Appendix: Instructions for manual testing")])])])])]),_v(" "),_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-0",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('a',{attrs:{"href":"/tp/AboutUs.html"}},[_v("About Us")])])])])],1)],1)]),_v(" "),_c('div',{attrs:{"id":"content-wrapper"}},[_m(0),_v(" "),_c('div',{pre:true,attrs:{"class":"page-nav-print d-none d-print-block"}}),_v(" "),_c('hr'),_v(" "),_m(1),_v(" "),_m(2),_v(" "),_c('p',[_v("The project simulates an ongoing software project for a desktop application (called AddressBook) used for managing contact details.")]),_v(" "),_c('p',[_v("The following libraries are used for this project:")]),_v(" "),_m(3),_v(" "),_c('hr'),_v(" "),_m(4),_v(" "),_m(5),_v(" "),_c('hr'),_v(" "),_m(6),_v(" "),_m(7),_v(" "),_c('pic',{attrs:{"src":"/tp/diagrams/ArchitectureDiagram.png","width":"280"}}),_v(" "),_m(8),_v(" "),_c('p',[_v("Given below is a quick overview of main components and how they interact with each other.")]),_v(" "),_m(9),_v(" "),_m(10),_v(" "),_m(11),_v(" "),_c('p',[_v("The bulk of the app's work is done by the following four components:")]),_v(" "),_m(12),_v(" "),_m(13),_v(" "),_m(14),_v(" "),_c('pic',{attrs:{"src":"/tp/diagrams/ArchitectureSequenceDiagram.png","width":"574"}}),_v(" "),_c('p',[_v("Each of the four main components (also shown in the diagram above),")]),_v(" "),_m(15),_v(" "),_m(16),_v(" "),_c('pic',{attrs:{"src":"/tp/diagrams/ComponentManagers.png","width":"300"}}),_v(" "),_c('p',[_v("The sections below give more details of each component.")]),_v(" "),_m(17),_v(" "),_m(18),_v(" "),_c('pic',{attrs:{"src":"/tp/diagrams/UiClassDiagram.png","alt":"Structure of the UI Component"}}),_v(" "),_m(19),_v(" "),_m(20),_v(" "),_m(21),_v(" "),_m(22),_v(" "),_m(23),_v(" "),_m(24),_v(" "),_m(25),_v(" "),_c('pic',{attrs:{"src":"/tp/diagrams/LogicClassDiagram.png","width":"550"}}),_v(" "),_m(26),_v(" "),_c('pic',{attrs:{"src":"/tp/diagrams/DeleteSequenceDiagram.png","alt":"Interactions Inside the Logic Component for the `delete 1` Command"}}),_v(" "),_c('box',{attrs:{"type":"info","seamless":""}},[_c('p',[_c('strong',[_v("Note:")]),_v(" The lifeline for "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("DeleteCommandParser")]),_v(" should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline continues till the end of diagram.")])]),_v(" "),_m(27),_v(" "),_m(28),_v(" "),_m(29),_v(" "),_c('pic',{attrs:{"src":"/tp/diagrams/ParserClasses.png","width":"600"}}),_v(" "),_c('p',[_v("How the parsing works:")]),_v(" "),_m(30),_v(" "),_m(31),_v(" "),_m(32),_v(" "),_c('pic',{attrs:{"src":"/tp/diagrams/ModelClassDiagram.png"}}),_v(" "),_m(33),_v(" "),_m(34),_v(" "),_c('box',{attrs:{"type":"info","seamless":""}},[_c('p',[_c('strong',[_v("Note:")]),_v(" An alternative (arguably, a more OOP) model is given below. It has a "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Tag")]),_v(" list in the "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("AddressBook")]),_v(", which "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Person")]),_v(" references. This allows "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("AddressBook")]),_v(" to only require one "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Tag")]),_v(" object per unique tag, instead of each "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Person")]),_v(" needing their own "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Tag")]),_v(" objects."),_c('br')]),_v(" "),_c('pic',{attrs:{"src":"/tp/diagrams/BetterModelClassDiagram.png","width":"450"}})],1),_v(" "),_m(35),_v(" "),_m(36),_v(" "),_c('pic',{attrs:{"src":"/tp/diagrams/StorageClassDiagram.png","width":"550"}}),_v(" "),_m(37),_v(" "),_m(38),_v(" "),_m(39),_v(" "),_m(40),_v(" "),_c('hr'),_v(" "),_m(41),_v(" "),_c('p',[_v("This section describes some noteworthy details on how certain features are implemented.")]),_v(" "),_m(42),_v(" "),_m(43),_v(" "),_m(44),_v(" "),_c('p',[_v("The following methods are involved:")]),_v(" "),_m(45),_v(" "),_m(46),_v(" "),_m(47),_v(" "),_c('pic',{attrs:{"src":"/tp/diagrams/AddTaskSequenceDiagram.png"}}),_v(" "),_c('box',{attrs:{"type":"info","seamless":""}},[_c('p',[_c('strong',[_v("Note:")]),_v(" The lifeline for "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("AddTaskCommand")]),_v(" should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline continues further down.")])]),_v(" "),_c('p',[_v("Below is an activity diagram that explains what happens when a user tries to add a task:")]),_v(" "),_c('pic',{attrs:{"src":"/tp/diagrams/AddTaskActivityDiagram.png"}}),_v(" "),_m(48),_v(" "),_m(49),_v(" "),_m(50),_v(" "),_c('p',[_v("The following methods are involved:")]),_v(" "),_m(51),_v(" "),_m(52),_v(" "),_m(53),_v(" "),_c('pic',{attrs:{"src":"/tp/diagrams/FindTaskSequenceDiagram.png"}}),_v(" "),_c('box',{attrs:{"type":"info","seamless":""}},[_c('p',[_c('strong',[_v("Note:")]),_v(" The lifeline for "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("FindTaskCommand")]),_v(" should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline continues further down.")])]),_v(" "),_c('p',[_v("Below is an activity diagram that explains what happens when a user tries to find tasks:")]),_v(" "),_c('pic',{attrs:{"src":"/tp/diagrams/FindTaskActivityDiagram.png"}}),_v(" "),_c('br'),_v(" "),_m(54),_v(" "),_m(55),_v(" "),_m(56),_v(" "),_m(57),_v(" "),_c('p',[_v("Given below is an example usage scenario and how the undo mechanism behaves at each step.")]),_v(" "),_m(58),_v(" "),_c('pic',{attrs:{"src":"/tp/diagrams/UndoRedoState0.png","alt":"UndoRedoState0"}}),_v(" "),_m(59),_v(" "),_c('pic',{attrs:{"src":"/tp/diagrams/UndoRedoState1.png","alt":"UndoRedoState1"}}),_v(" "),_m(60),_v(" "),_c('pic',{attrs:{"src":"/tp/diagrams/UndoRedoState2.png","alt":"UndoRedoState2"}}),_v(" "),_c('box',{attrs:{"type":"info","seamless":""}},[_c('p',[_c('strong',[_v("Note:")]),_v(" If a command fails its execution, it will not call "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Model#commitAddressBook()")]),_v(", so the address book state will not be saved into the "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("addressBookStateList")]),_v(".")])]),_v(" "),_m(61),_v(" "),_c('pic',{attrs:{"src":"/tp/diagrams/UndoRedoState3.png","alt":"UndoRedoState3"}}),_v(" "),_c('box',{attrs:{"type":"info","seamless":""}},[_c('p',[_c('strong',[_v("Note:")]),_v(" If the "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("currentStatePointer")]),_v(" is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("undo")]),_v(" command uses "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Model#canUndoAddressBook()")]),_v(" to check if this is the case. If so, it will return an error to the user rather\nthan attempting to perform the undo.")])]),_v(" "),_m(62),_v(" "),_c('pic',{attrs:{"src":"/tp/diagrams/UndoSequenceDiagram-Logic.png","alt":"UndoSequenceDiagram-Logic"}}),_v(" "),_c('box',{attrs:{"type":"info","seamless":""}},[_c('p',[_c('strong',[_v("Note:")]),_v(" The lifeline for "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("UndoCommand")]),_v(" should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.")])]),_v(" "),_m(63),_v(" "),_m(64),_v(" "),_m(65),_v(" "),_c('hr'),_v(" "),_m(66),_v(" "),_m(67),_v(" "),_c('hr'),_v(" "),_m(68),_v(" "),_m(69),_v(" "),_m(70),_v(" "),_m(71),_v(" "),_m(72),_v(" "),_m(73),_v(" "),_m(74),_v(" "),_m(75),_m(76),_v(" "),_m(77),_v(" "),_m(78),_v(" "),_m(79),_v(" "),_m(80),_v(" "),_m(81),_v(" "),_m(82),_v(" "),_m(83),_v(" "),_m(84),_v(" "),_m(85),_v(" "),_m(86),_v(" "),_m(87),_v(" "),_m(88),_v(" "),_m(89),_v(" "),_m(90),_v(" "),_m(91),_v(" "),_m(92),_v(" "),_m(93),_v(" "),_m(94),_v(" "),_m(95),_v(" "),_m(96),_v(" "),_m(97),_v(" "),_m(98),_v(" "),_m(99),_v(" "),_m(100),_v(" "),_m(101),_v(" "),_m(102),_v(" "),_m(103),_v(" "),_m(104),_v(" "),_m(105),_v(" "),_m(106),_v(" "),_m(107),_v(" "),_m(108),_v(" "),_m(109),_v(" "),_m(110),_v(" "),_m(111),_v(" "),_m(112),_v(" "),_m(113),_v(" "),_m(114),_v(" "),_m(115),_v(" "),_m(116),_v(" "),_m(117),_v(" "),_m(118),_v(" "),_m(119),_v(" "),_m(120),_v(" "),_m(121),_v(" "),_c('p',[_v("Use case ends.")]),_v(" "),_m(122),_v(" "),_m(123),_v(" "),_m(124),_v(" "),_m(125),_v(" "),_m(126),_v(" "),_m(127),_v(" "),_m(128),_v(" "),_m(129),_v(" "),_m(130),_v(" "),_m(131),_v(" "),_m(132),_v(" "),_m(133),_v(" "),_m(134),_v(" "),_m(135),_v(" "),_m(136),_v(" "),_m(137),_v(" "),_m(138),_v(" "),_m(139),_v(" "),_m(140),_v(" "),_m(141),_v(" "),_m(142),_v(" "),_m(143),_v(" "),_m(144),_v(" "),_m(145),_v(" "),_m(146),_v(" "),_m(147),_v(" "),_m(148),_v(" "),_m(149),_v(" "),_m(150),_v(" "),_m(151),_v(" "),_m(152),_v(" "),_m(153),_v(" "),_m(154),_v(" "),_m(155),_v(" "),_m(156),_v(" "),_c('hr'),_v(" "),_m(157),_v(" "),_c('p',[_v("Given below are instructions to test the app manually.")]),_v(" "),_c('box',{attrs:{"type":"info","seamless":""}},[_c('p',[_c('strong',[_v("Note:")]),_v(" These instructions only provide a starting point for testers to work on;\ntesters are expected to do more "),_c('em',[_v("exploratory")]),_v(" testing.")])]),_v(" "),_m(158),_v(" "),_m(159),_v(" "),_m(160),_v(" "),_c('p',[_v("Adding a patient to NovaCare")]),_v(" "),_m(161),_v(" "),_m(162),_v(" "),_m(163),_v(" "),_m(164),_v(" "),_m(165),_v(" "),_m(166),_v(" "),_m(167),_v(" "),_m(168),_v(" "),_m(169),_v(" "),_m(170),_v(" "),_m(171),_v(" "),_m(172),_v(" "),_m(173),_v(" "),_m(174),_v(" "),_c('p',[_v("Changing a priority level of a patient")]),_v(" "),_m(175),_v(" "),_m(176),_v(" "),_m(177),_v(" "),_c('p',[_v("Adding an emergency contact of a patient")]),_v(" "),_m(178),_v(" "),_m(179),_v(" "),_m(180),_v(" "),_c('p',[_v("Deleting the emergency contact of a patient")]),_v(" "),_m(181),_v(" "),_m(182),_v(" "),_m(183),_v(" "),_c('p',[_v("Adding a task to a patient while all patients and tasks are being shown")]),_v(" "),_m(184),_v(" "),_m(185),_v(" "),_m(186),_v(" "),_c('p',[_v("Deleting a task for a patient while all patients and tasks are being shown")]),_v(" "),_m(187),_v(" "),_m(188),_v(" "),_m(189),_v(" "),_c('p',[_v("Finding a task for a patient while all patients are being shown")]),_v(" "),_m(190),_v(" "),_m(191),_v(" "),_m(192),_v(" "),_c('p',[_v("Marking a task for a patient while all patients and tasks are being shown")]),_v(" "),_m(193),_v(" "),_m(194),_v(" "),_m(195),_v(" "),_c('p',[_v("Unmarking a task for a patient while all patients and tasks are being shown")]),_v(" "),_m(196),_v(" "),_m(197),_v(" "),_m(198),_v(" "),_c('p',[_v("Listing all tasks that are incomplete while all patients are being shown")]),_v(" "),_m(199),_v(" "),_m(200),_v(" "),_m(201),_v(" "),_m(202),_v(" "),_c('hr'),_v(" "),_m(203),_v(" "),_c('p',[_v("Team size: 5")]),_v(" "),_c('p',[_v("This section outlines proposed improvements to address known feature flaws identified during testing and user feedback. Each planned enhancement targets a specific limitation in the current implementation, aiming to improve data accuracy, user experience, and overall system reliability. Below, we detail the issues and outline precise changes, including examples, to demonstrate how each improvement will better meet user needs.")]),_v(" "),_m(204)],1),_v(" "),_c('overlay-source',{attrs:{"id":"page-nav","tag-name":"nav","to":"page-nav"}},[_c('div',{staticClass:"nav-component slim-scroll"},[_c('overlay-source',{staticClass:"nav nav-pills flex-column my-0 small no-flex-wrap",attrs:{"id":"mb-page-nav","tag-name":"nav","to":"mb-page-nav"}},[_c('a',{pre:true,attrs:{"class":"nav-link py-1","href":"#novacare-developer-guide"}},[_v("NovaCare Developer Guide‎")]),_v(" "),_c('nav',{staticClass:"nav nav-pills flex-column my-0 nested no-flex-wrap"},[_c('a',{pre:true,attrs:{"class":"nav-link py-1","href":"#acknowledgements"}},[_v("Acknowledgements‎")]),_v(" "),_c('a',{pre:true,attrs:{"class":"nav-link py-1","href":"#setting-up-getting-started"}},[_v("Setting Up, Getting Started‎")]),_v(" "),_c('a',{pre:true,attrs:{"class":"nav-link py-1","href":"#design"}},[_v("Design‎")]),_v(" "),_c('nav',{staticClass:"nav nav-pills flex-column my-0 nested no-flex-wrap"},[_c('a',{pre:true,attrs:{"class":"nav-link py-1","href":"#architecture"}},[_v("Architecture‎")]),_v(" "),_c('a',{pre:true,attrs:{"class":"nav-link py-1","href":"#ui-component"}},[_v("UI Component‎")]),_v(" "),_c('a',{pre:true,attrs:{"class":"nav-link py-1","href":"#logic-component"}},[_v("Logic Component‎")]),_v(" "),_c('a',{pre:true,attrs:{"class":"nav-link py-1","href":"#model-component"}},[_v("Model component‎")]),_v(" "),_c('a',{pre:true,attrs:{"class":"nav-link py-1","href":"#storage-component"}},[_v("Storage Component‎")]),_v(" "),_c('a',{pre:true,attrs:{"class":"nav-link py-1","href":"#common-classes"}},[_v("Common Classes‎")])]),_v(" "),_c('a',{pre:true,attrs:{"class":"nav-link py-1","href":"#implementation"}},[_v("Implementation‎")]),_v(" "),_c('nav',{staticClass:"nav nav-pills flex-column my-0 nested no-flex-wrap"},[_c('a',{pre:true,attrs:{"class":"nav-link py-1","href":"#add-task-feature"}},[_v("Add Task feature‎")]),_v(" "),_c('a',{pre:true,attrs:{"class":"nav-link py-1","href":"#find-task-feature"}},[_v("Find Task feature‎")])]),_v(" "),_c('a',{pre:true,attrs:{"class":"nav-link py-1","href":"#documentation-logging-testing-configuration-dev-ops"}},[_v("Documentation, Logging, Testing, Configuration, Dev-Ops‎")]),_v(" "),_c('a',{pre:true,attrs:{"class":"nav-link py-1","href":"#appendix-requirements"}},[_v("Appendix: Requirements‎")]),_v(" "),_c('nav',{staticClass:"nav nav-pills flex-column my-0 nested no-flex-wrap"},[_c('a',{pre:true,attrs:{"class":"nav-link py-1","href":"#product-scope"}},[_v("Product Scope‎")]),_v(" "),_c('a',{pre:true,attrs:{"class":"nav-link py-1","href":"#user-stories"}},[_v("User Stories‎")]),_v(" "),_c('a',{pre:true,attrs:{"class":"nav-link py-1","href":"#use-cases"}},[_v("Use cases‎")]),_v(" "),_c('a',{pre:true,attrs:{"class":"nav-link py-1","href":"#non-functional-requirements"}},[_v("Non-Functional Requirements‎")]),_v(" "),_c('a',{pre:true,attrs:{"class":"nav-link py-1","href":"#glossary"}},[_v("Glossary‎")])]),_v(" "),_c('a',{pre:true,attrs:{"class":"nav-link py-1","href":"#appendix-instructions-for-manual-testing"}},[_v("Appendix: Instructions for Manual Testing‎")]),_v(" "),_c('nav',{staticClass:"nav nav-pills flex-column my-0 nested no-flex-wrap"},[_c('a',{pre:true,attrs:{"class":"nav-link py-1","href":"#launch-and-shutdown"}},[_v("Launch and Shutdown‎")]),_v(" "),_c('a',{pre:true,attrs:{"class":"nav-link py-1","href":"#adding-a-patient"}},[_v("Adding a Patient‎")]),_v(" "),_c('a',{pre:true,attrs:{"class":"nav-link py-1","href":"#deleting-a-patient"}},[_v("Deleting a Patient‎")]),_v(" "),_c('a',{pre:true,attrs:{"class":"nav-link py-1","href":"#editing-a-patient"}},[_v("Editing a Patient‎")]),_v(" "),_c('a',{pre:true,attrs:{"class":"nav-link py-1","href":"#finding-a-patient"}},[_v("Finding a Patient‎")]),_v(" "),_c('a',{pre:true,attrs:{"class":"nav-link py-1","href":"#changing-resetting-priority-level"}},[_v("Changing/ Resetting Priority Level‎")]),_v(" "),_c('a',{pre:true,attrs:{"class":"nav-link py-1","href":"#adding-emergency-contact"}},[_v("Adding Emergency Contact‎")]),_v(" "),_c('a',{pre:true,attrs:{"class":"nav-link py-1","href":"#deleting-emergency-contact"}},[_v("Deleting Emergency Contact‎")]),_v(" "),_c('a',{pre:true,attrs:{"class":"nav-link py-1","href":"#adding-a-task"}},[_v("Adding a Task‎")]),_v(" "),_c('a',{pre:true,attrs:{"class":"nav-link py-1","href":"#deleting-a-task"}},[_v("Deleting a Task‎")]),_v(" "),_c('a',{pre:true,attrs:{"class":"nav-link py-1","href":"#finding-a-task"}},[_v("Finding a Task‎")]),_v(" "),_c('a',{pre:true,attrs:{"class":"nav-link py-1","href":"#marking-a-task"}},[_v("Marking a Task‎")]),_v(" "),_c('a',{pre:true,attrs:{"class":"nav-link py-1","href":"#unmarking-a-task"}},[_v("Unmarking a Task‎")]),_v(" "),_c('a',{pre:true,attrs:{"class":"nav-link py-1","href":"#listing-all-incomplete-tasks"}},[_v("Listing all Incomplete Tasks‎")]),_v(" "),_c('a',{pre:true,attrs:{"class":"nav-link py-1","href":"#saving-data"}},[_v("Saving data‎")])]),_v(" "),_c('a',{pre:true,attrs:{"class":"nav-link py-1","href":"#appendix-planned-enhancements"}},[_v("Appendix: Planned Enhancements‎")])])])],1)]),_v(" "),_c('scroll-top-button')],1),_v(" "),_m(205)])}
};
    var pageVueStaticRenderFns = [function anonymous(
) {
with(this){return _c('h1',{attrs:{"id":"novacare-developer-guide"}},[_v("NovaCare Developer Guide"),_c('a',{staticClass:"fa fa-anchor",attrs:{"href":"#novacare-developer-guide","onclick":"event.stopPropagation()"}})])}
},function anonymous(
) {
with(this){return _c('h2',{attrs:{"id":"acknowledgements"}},[_c('strong',[_v("Acknowledgements")]),_c('a',{staticClass:"fa fa-anchor",attrs:{"href":"#acknowledgements","onclick":"event.stopPropagation()"}})])}
},function anonymous(
) {
with(this){return _c('p',[_v("NovaCare is based on the AddressBook-Level3 project created by the "),_c('a',{attrs:{"href":"https://se-education.org"}},[_v("SE-EDU initiative")]),_v(".")])}
},function anonymous(
) {
with(this){return _c('ul',[_c('li',[_c('a',{attrs:{"href":"https://openjfx.io/"}},[_v("JavaFX")]),_v(" for GUI")]),_v(" "),_c('li',[_c('a',{attrs:{"href":"https://junit.org/junit5/"}},[_v("JUnit")]),_v(" for testing")])])}
},function anonymous(
) {
with(this){return _c('h2',{attrs:{"id":"setting-up-getting-started"}},[_c('strong',[_v("Setting Up, Getting Started")]),_c('a',{staticClass:"fa fa-anchor",attrs:{"href":"#setting-up-getting-started","onclick":"event.stopPropagation()"}})])}
},function anonymous(
) {
with(this){return _c('p',[_v("Refer to the guide "),_c('a',{attrs:{"href":"/tp/SettingUp.html"}},[_c('em',[_v("Setting up and getting started")])]),_v(".")])}
},function anonymous(
) {
with(this){return _c('h2',{attrs:{"id":"design"}},[_c('strong',[_v("Design")]),_c('a',{staticClass:"fa fa-anchor",attrs:{"href":"#design","onclick":"event.stopPropagation()"}})])}
},function anonymous(
) {
with(this){return _c('h3',{attrs:{"id":"architecture"}},[_v("Architecture"),_c('a',{staticClass:"fa fa-anchor",attrs:{"href":"#architecture","onclick":"event.stopPropagation()"}})])}
},function anonymous(
) {
with(this){return _c('p',[_v("The "),_c('em',[_c('strong',[_v("Architecture Diagram")])]),_v(" given above explains the high-level design of the App.")])}
},function anonymous(
) {
with(this){return _c('p',[_c('strong',[_v("Main components of the architecture")])])}
},function anonymous(
) {
with(this){return _c('p',[_c('strong',[_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Main")])]),_v(" (consisting of classes "),_c('a',{attrs:{"href":"https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java"}},[_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Main")])]),_v(" and "),_c('a',{attrs:{"href":"https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java"}},[_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("MainApp")])]),_v(") is in charge of the app launch and shut down.")])}
},function anonymous(
) {
with(this){return _c('ul',[_c('li',[_v("At app launch, it initializes the other components in the correct sequence, and connects them up with each other.")]),_v(" "),_c('li',[_v("At shut down, it shuts down the other components and invokes cleanup methods where necessary.")])])}
},function anonymous(
) {
with(this){return _c('ul',[_c('li',[_c('a',{attrs:{"href":"#ui-component"}},[_c('strong',[_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("UI")])])]),_v(": The UI of the App.")]),_v(" "),_c('li',[_c('a',{attrs:{"href":"#logic-component"}},[_c('strong',[_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Logic")])])]),_v(": The command executor.")]),_v(" "),_c('li',[_c('a',{attrs:{"href":"#model-component"}},[_c('strong',[_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Model")])])]),_v(": Holds the data of the App in memory.")]),_v(" "),_c('li',[_c('a',{attrs:{"href":"#storage-component"}},[_c('strong',[_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Storage")])])]),_v(": Reads data from, and writes data to, the hard disk.")]),_v(" "),_c('li',[_c('a',{attrs:{"href":"#common-classes"}},[_c('strong',[_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Commons")])])]),_v(" represents a collection of classes used by multiple other components.")])])}
},function anonymous(
) {
with(this){return _c('p',[_c('strong',[_v("How the architecture components interact with each other")])])}
},function anonymous(
) {
with(this){return _c('p',[_v("The "),_c('em',[_v("Sequence Diagram")]),_v(" below shows how the components interact with each other for the scenario where the user issues the command "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("delete 1")]),_v(".")])}
},function anonymous(
) {
with(this){return _c('ul',[_c('li',[_v("defines its "),_c('em',[_v("API")]),_v(" in an "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("interface")]),_v(" with the same name as the Component.")]),_v(" "),_c('li',[_v("implements its functionality using a concrete "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("{Component Name}Manager")]),_v(" class (which follows the corresponding API "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("interface")]),_v(" mentioned in the previous point.")])])}
},function anonymous(
) {
with(this){return _c('p',[_v("For example, the "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Logic")]),_v(" component defines its API in the "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Logic.java")]),_v(" interface and implements its functionality using the "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("LogicManager.java")]),_v(" class which follows the "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Logic")]),_v(" interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component's being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.")])}
},function anonymous(
) {
with(this){return _c('h3',{attrs:{"id":"ui-component"}},[_v("UI Component"),_c('a',{staticClass:"fa fa-anchor",attrs:{"href":"#ui-component","onclick":"event.stopPropagation()"}})])}
},function anonymous(
) {
with(this){return _c('p',[_v("The "),_c('strong',[_v("API")]),_v(" of this component is specified in "),_c('a',{attrs:{"href":"https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java"}},[_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Ui.java")])])])}
},function anonymous(
) {
with(this){return _c('p',[_v("The UI consists of a "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("MainWindow")]),_v(" that is made up of parts e.g."),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("CommandBox")]),_v(", "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("ResultDisplay")]),_v(", "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("PersonListPanel")]),_v(", "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("StatusBarFooter")]),_v(" etc. All these, including the "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("MainWindow")]),_v(", inherit from the abstract "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("UiPart")]),_v(" class which captures the commonalities between classes that represent parts of the visible GUI.")])}
},function anonymous(
) {
with(this){return _c('p',[_v("The "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("UI")]),_v(" component uses the JavaFx UI framework. The layout of these UI parts are defined in matching "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v(".fxml")]),_v(" files that are in the "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("src/main/resources/view")]),_v(" folder. For example, the layout of the "),_c('a',{attrs:{"href":"https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java"}},[_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("MainWindow")])]),_v(" is specified in "),_c('a',{attrs:{"href":"https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml"}},[_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("MainWindow.fxml")])])])}
},function anonymous(
) {
with(this){return _c('p',[_v("The "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("UI")]),_v(" component,")])}
},function anonymous(
) {
with(this){return _c('ul',[_c('li',[_v("executes user commands using the "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Logic")]),_v(" component.")]),_v(" "),_c('li',[_v("listens for changes to "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Model")]),_v(" data so that the UI can be updated with the modified data.")]),_v(" "),_c('li',[_v("keeps a reference to the "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Logic")]),_v(" component, because the "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("UI")]),_v(" relies on the "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Logic")]),_v(" to execute commands.")]),_v(" "),_c('li',[_v("depends on some classes in the "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Model")]),_v(" component, as it displays "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Person")]),_v(" object residing in the "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Model")]),_v(".")])])}
},function anonymous(
) {
with(this){return _c('h3',{attrs:{"id":"logic-component"}},[_v("Logic Component"),_c('a',{staticClass:"fa fa-anchor",attrs:{"href":"#logic-component","onclick":"event.stopPropagation()"}})])}
},function anonymous(
) {
with(this){return _c('p',[_c('strong',[_v("API")]),_v(" : "),_c('a',{attrs:{"href":"https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java"}},[_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Logic.java")])])])}
},function anonymous(
) {
with(this){return _c('p',[_v("Here's a (partial) class diagram of the "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Logic")]),_v(" component:")])}
},function anonymous(
) {
with(this){return _c('p',[_v("The sequence diagram below illustrates the interactions within the "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Logic")]),_v(" component, taking "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("execute(\"delete 1\")")]),_v(" API call as an example.")])}
},function anonymous(
) {
with(this){return _c('p',[_v("How the "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Logic")]),_v(" Component works:")])}
},function anonymous(
) {
with(this){return _c('ol',[_c('li',[_v("When "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Logic")]),_v(" is called upon to execute a command, it is passed to an "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("AddressBookParser")]),_v(" object which in turn creates a parser that matches the command (e.g., "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("DeleteCommandParser")]),_v(") and uses it to parse the command.")]),_v(" "),_c('li',[_v("This results in a "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Command")]),_v(" object (more precisely, an object of one of its subclasses e.g., "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("DeleteCommand")]),_v(") which is executed by the "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("LogicManager")]),_v(".")]),_v(" "),_c('li',[_v("The command can communicate with the "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Model")]),_v(" when it is executed (e.g. to delete a patient)."),_c('br'),_v("\nNote that although this is shown as a single step in the diagram above (for simplicity), in the code it can take several interactions (between the command object and the "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Model")]),_v(") to achieve.")]),_v(" "),_c('li',[_v("The result of the command execution is encapsulated as a "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("CommandResult")]),_v(" object which is returned back from "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Logic")]),_v(".")])])}
},function anonymous(
) {
with(this){return _c('p',[_v("Here are the other classes in "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Logic")]),_v(" (omitted from the class diagram above) that are used for parsing a user command:")])}
},function anonymous(
) {
with(this){return _c('ul',[_c('li',[_v("When called upon to parse a user command, the "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("AddressBookParser")]),_v(" class creates an "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("XYZCommandParser")]),_v(" ("),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("XYZ")]),_v(" is a placeholder for the specific command name e.g., "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("AddCommandParser")]),_v(") which uses the other classes shown above to parse the user command and create a "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("XYZCommand")]),_v(" object (e.g., "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("AddCommand")]),_v(") which the "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("AddressBookParser")]),_v(" returns back as a "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Command")]),_v(" object.")]),_v(" "),_c('li',[_v("All "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("XYZCommandParser")]),_v(" classes (e.g., "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("AddCommandParser")]),_v(", "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("DeleteCommandParser")]),_v(", ...) inherit from the "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Parser")]),_v(" interface so that they can be treated similarly where possible e.g, during testing.")])])}
},function anonymous(
) {
with(this){return _c('h3',{attrs:{"id":"model-component"}},[_v("Model component"),_c('a',{staticClass:"fa fa-anchor",attrs:{"href":"#model-component","onclick":"event.stopPropagation()"}})])}
},function anonymous(
) {
with(this){return _c('p',[_c('strong',[_v("API")]),_v(" : "),_c('a',{attrs:{"href":"https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java"}},[_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Model.java")])])])}
},function anonymous(
) {
with(this){return _c('p',[_v("The "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Model")]),_v(" Component,")])}
},function anonymous(
) {
with(this){return _c('ul',[_c('li',[_v("stores the address book data i.e., all "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Person")]),_v(" objects (which are contained in a "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("UniquePersonList")]),_v(" object).")]),_v(" "),_c('li',[_v("stores the address book data i.e., all "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Task")]),_v(" objects (which are contained in a "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("UniqueTaskList")]),_v(" object).")]),_v(" "),_c('li',[_v("stores the currently 'selected' "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Person")]),_v(" objects (e.g., results of a search query) as a separate "),_c('em',[_v("filtered")]),_v(" list which is exposed to outsiders as an unmodifiable "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("ObservableList<Person>")]),_v(" that can be 'observed' e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.")]),_v(" "),_c('li',[_v("stores the currently 'selected' "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Task")]),_v(" objects (e.g., results of a search query) as a separate "),_c('em',[_v("filtered")]),_v(" list which is exposed to outsiders as an unmodifiable "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("ObservableList<Task>")]),_v(" that can be 'observed' e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.")]),_v(" "),_c('li',[_v("stores a "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("UserPref")]),_v(" object that represents the user’s preferences. This is exposed to the outside as a "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("ReadOnlyUserPref")]),_v(" objects.")]),_v(" "),_c('li',[_v("does not depend on any of the other three components (as the "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Model")]),_v(" represents data entities of the domain, they should make sense on their own without depending on other components)")])])}
},function anonymous(
) {
with(this){return _c('h3',{attrs:{"id":"storage-component"}},[_v("Storage Component"),_c('a',{staticClass:"fa fa-anchor",attrs:{"href":"#storage-component","onclick":"event.stopPropagation()"}})])}
},function anonymous(
) {
with(this){return _c('p',[_c('strong',[_v("API")]),_v(" : "),_c('a',{attrs:{"href":"https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java"}},[_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Storage.java")])])])}
},function anonymous(
) {
with(this){return _c('p',[_v("The "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Storage")]),_v(" component,")])}
},function anonymous(
) {
with(this){return _c('ul',[_c('li',[_v("can save both address book data and user preference data in JSON format, and read them back into corresponding objects.")]),_v(" "),_c('li',[_v("inherits from both "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("AddressBookStorage")]),_v(" and "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("UserPrefStorage")]),_v(", which means it can be treated as either one (if only the functionality of only one is needed).")]),_v(" "),_c('li',[_v("depends on some classes in the "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Model")]),_v(" component (because the "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Storage")]),_v(" component's job is to save/retrieve objects that belong to the "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Model")]),_v(")")])])}
},function anonymous(
) {
with(this){return _c('h3',{attrs:{"id":"common-classes"}},[_v("Common Classes"),_c('a',{staticClass:"fa fa-anchor",attrs:{"href":"#common-classes","onclick":"event.stopPropagation()"}})])}
},function anonymous(
) {
with(this){return _c('p',[_v("Classes used by multiple components are in the "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("seedu.address.commons")]),_v(" package.")])}
},function anonymous(
) {
with(this){return _c('h2',{attrs:{"id":"implementation"}},[_c('strong',[_v("Implementation")]),_c('a',{staticClass:"fa fa-anchor",attrs:{"href":"#implementation","onclick":"event.stopPropagation()"}})])}
},function anonymous(
) {
with(this){return _c('h3',{attrs:{"id":"add-task-feature"}},[_v("Add Task feature"),_c('a',{staticClass:"fa fa-anchor",attrs:{"href":"#add-task-feature","onclick":"event.stopPropagation()"}})])}
},function anonymous(
) {
with(this){return _c('h4',{attrs:{"id":"implementation-2"}},[_v("Implementation"),_c('a',{staticClass:"fa fa-anchor",attrs:{"href":"#implementation-2","onclick":"event.stopPropagation()"}})])}
},function anonymous(
) {
with(this){return _c('p',[_v("The "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("addtask")]),_v(" command is used to add a new task to a patient in NovaCare. It is executed when a user adds a task to a patient. This command operates on the "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Model")]),_v(" component, updating the target patient by appending a new task to their list of tasks.")])}
},function anonymous(
) {
with(this){return _c('ul',[_c('li',[_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("AddTaskCommand#execute(Model model)")]),_v(" — Adds a new "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Task")]),_v(" to the specified "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Patient")]),_v(".")]),_v(" "),_c('li',[_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Model#addTask(Task task)")]),_v("  — Adds a new "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Task")]),_v(" to the model.")]),_v(" "),_c('li',[_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Task")]),_v("  — Represents a task to be added.")])])}
},function anonymous(
) {
with(this){return _c('h4',{attrs:{"id":"example-usage-scenario"}},[_v("Example usage scenario:"),_c('a',{staticClass:"fa fa-anchor",attrs:{"href":"#example-usage-scenario","onclick":"event.stopPropagation()"}})])}
},function anonymous(
) {
with(this){return _c('ol',[_c('li',[_v("The user enters the "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("addTask")]),_v(" command with the patient index and task description.")]),_v(" "),_c('li',[_v("The command fetches the selected patient and create a new "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Task")]),_v(".")]),_v(" "),_c('li',[_v("A check is performed to ensure the task does not already exist for the patient.")]),_v(" "),_c('li',[_v("The AddTaskCommand calls Model#addTask(Task task) to add the task to the model.")]),_v(" "),_c('li',[_v("The changes are committed to the model and a success message is displayed to the user.")])])}
},function anonymous(
) {
with(this){return _c('h3',{attrs:{"id":"find-task-feature"}},[_v("Find Task feature"),_c('a',{staticClass:"fa fa-anchor",attrs:{"href":"#find-task-feature","onclick":"event.stopPropagation()"}})])}
},function anonymous(
) {
with(this){return _c('h4',{attrs:{"id":"implementation-3"}},[_v("Implementation"),_c('a',{staticClass:"fa fa-anchor",attrs:{"href":"#implementation-3","onclick":"event.stopPropagation()"}})])}
},function anonymous(
) {
with(this){return _c('p',[_v("The "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("findtask")]),_v(" command is used to find all tasks from a specified patient index in NovaCare. It is executed when a user wants to view all tasks for a specific patient. This command operates on the "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Model")]),_v(" component, searching for all tasks that match the specified patient index.")])}
},function anonymous(
) {
with(this){return _c('ul',[_c('li',[_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("FindTaskCommand#execute(Model model)")]),_v(" — Finds all tasks for the specified "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Patient")]),_v(" index.")]),_v(" "),_c('li',[_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Model#updateFilteredTaskList(Predicate<Task> predicate)")]),_v("  — Updates the filtered task list to show only tasks that match the predicate.")]),_v(" "),_c('li',[_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Task#getPatient()")]),_v("  — Returns the patient index of the task.")])])}
},function anonymous(
) {
with(this){return _c('h4',{attrs:{"id":"example-usage-scenario-2"}},[_v("Example usage scenario:"),_c('a',{staticClass:"fa fa-anchor",attrs:{"href":"#example-usage-scenario-2","onclick":"event.stopPropagation()"}})])}
},function anonymous(
) {
with(this){return _c('ol',[_c('li',[_v("The user selects the patient index and executes the "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("findtask")]),_v(" command. The command fetches the selected patient and filter the task list to show tasks related to that particular patient.")]),_v(" "),_c('li',[_v("The model applies the predicate to the task list, showing only tasks that match the predicate.")]),_v(" "),_c('li',[_v("The GUI displays the filtered task list to the user.")])])}
},function anonymous(
) {
with(this){return _c('h4',{attrs:{"id":"proposed-implementation"}},[_v("Proposed Implementation"),_c('a',{staticClass:"fa fa-anchor",attrs:{"href":"#proposed-implementation","onclick":"event.stopPropagation()"}})])}
},function anonymous(
) {
with(this){return _c('p',[_v("The proposed undo mechanism is facilitated by "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("VersionedAddressBook")]),_v(". It extends "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("AddressBook")]),_v(" class with an undo history, stored internally as an "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("addressBookStateList")]),_v(" and "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("currentStatePointer")]),_v(". Additionally, it implements the following operations:")])}
},function anonymous(
) {
with(this){return _c('ul',[_c('li',[_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("VersionedAddressBook#commit()")]),_v(" — Saves the current address book state in its history.")]),_v(" "),_c('li',[_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("VersionedAddressBook#undo()")]),_v(" — Restores the previous address book state from its history.")]),_v(" "),_c('li',[_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("VersionedAddressBook#redo()")]),_v(" — Restores a previously undone address book state from its history.")])])}
},function anonymous(
) {
with(this){return _c('p',[_v("These operations are exposed in the "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Model")]),_v(" interface as "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Model#commitAddressBook()")]),_v(" and "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Model#undoAddressBook()")]),_v(" respectively.")])}
},function anonymous(
) {
with(this){return _c('p',[_v("Step 1. The user launches the application for the first time. The "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("VersionedAddressBook")]),_v(" will be initialized with the initial address book state, and the "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("currentStatePointer")]),_v(" pointing to that single address book state.")])}
},function anonymous(
) {
with(this){return _c('p',[_v("Step 2. The user executes "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("delete 5")]),_v(" command to delete the 5th patient in the address book. The "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("delete")]),_v(" command calls "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Model#commitAddressBook()")]),_v(", causing the modified state of the address book after the "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("delete 5")]),_v(" command executes to be saved in the "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("addressBookStateList")]),_v(", and the "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("currentStatePointer")]),_v(" is shifted to the newly inserted address book state.")])}
},function anonymous(
) {
with(this){return _c('p',[_v("Step 3. The user executes "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("add n/David …​")]),_v(" to add a new patient. The "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("add")]),_v(" command also calls "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Model#commitAddressBook()")]),_v(", causing another modified address book state to be saved into the "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("addressBookStateList")]),_v(".")])}
},function anonymous(
) {
with(this){return _c('p',[_v("Step 4. The user now decides that adding the patient was a mistake, and decides to undo that action by executing the "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("undo")]),_v(" command. The "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("undo")]),_v(" command will call "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Model#undoAddressBook()")]),_v(", which will shift the "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("currentStatePointer")]),_v(" once to the left, pointing it to the previous address book state, and restores the address book to that state.")])}
},function anonymous(
) {
with(this){return _c('p',[_v("The following sequence diagram shows how an undo operation goes through the "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Logic")]),_v(" component:")])}
},function anonymous(
) {
with(this){return _c('h4',{attrs:{"id":"design-considerations"}},[_v("Design Considerations:"),_c('a',{staticClass:"fa fa-anchor",attrs:{"href":"#design-considerations","onclick":"event.stopPropagation()"}})])}
},function anonymous(
) {
with(this){return _c('p',[_c('strong',[_v("Aspect: How Undo Executes:")])])}
},function anonymous(
) {
with(this){return _c('ul',[_c('li',[_c('p',[_c('strong',[_v("Alternative 1 (current choice):")]),_v(" Saves the entire address book.")]),_v(" "),_c('ul',[_c('li',[_v("Pros: Easy to implement.")]),_v(" "),_c('li',[_v("Cons: May have performance issues in terms of memory usage.")])])]),_v(" "),_c('li',[_c('p',[_c('strong',[_v("Alternative 2:")]),_v(" Individual command knows how to undo by\nitself.")]),_v(" "),_c('ul',[_c('li',[_v("Pros: Will use less memory (e.g. for "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("delete")]),_v(", just save the patient being deleted).")]),_v(" "),_c('li',[_v("Cons: We must ensure that the implementation of each individual command are correct.")])])])])}
},function anonymous(
) {
with(this){return _c('h2',{attrs:{"id":"documentation-logging-testing-configuration-dev-ops"}},[_c('strong',[_v("Documentation, Logging, Testing, Configuration, Dev-Ops")]),_c('a',{staticClass:"fa fa-anchor",attrs:{"href":"#documentation-logging-testing-configuration-dev-ops","onclick":"event.stopPropagation()"}})])}
},function anonymous(
) {
with(this){return _c('ul',[_c('li',[_c('a',{attrs:{"href":"/tp/Documentation.html"}},[_v("Documentation guide")])]),_v(" "),_c('li',[_c('a',{attrs:{"href":"/tp/Testing.html"}},[_v("Testing guide")])]),_v(" "),_c('li',[_c('a',{attrs:{"href":"/tp/Logging.html"}},[_v("Logging guide")])]),_v(" "),_c('li',[_c('a',{attrs:{"href":"/tp/Configuration.html"}},[_v("Configuration guide")])]),_v(" "),_c('li',[_c('a',{attrs:{"href":"/tp/DevOps.html"}},[_v("DevOps guide")])])])}
},function anonymous(
) {
with(this){return _c('h2',{attrs:{"id":"appendix-requirements"}},[_c('strong',[_v("Appendix: Requirements")]),_c('a',{staticClass:"fa fa-anchor",attrs:{"href":"#appendix-requirements","onclick":"event.stopPropagation()"}})])}
},function anonymous(
) {
with(this){return _c('h3',{attrs:{"id":"product-scope"}},[_v("Product Scope"),_c('a',{staticClass:"fa fa-anchor",attrs:{"href":"#product-scope","onclick":"event.stopPropagation()"}})])}
},function anonymous(
) {
with(this){return _c('p',[_c('strong',[_v("Target User Profile")]),_v(":")])}
},function anonymous(
) {
with(this){return _c('ul',[_c('li',[_v("Private nurse in the healthcare industry managing patients")]),_v(" "),_c('li',[_v("Has many patients across different wards with varying care levels (priority levels)\n"),_c('ul',[_c('li',[_v("where each patient has varying tasks")])])]),_v(" "),_c('li',[_v("Mainly done in desktop app")]),_v(" "),_c('li',[_v("Used to typing to fill out user information")]),_v(" "),_c('li',[_v("Is comfortable using CLI")])])}
},function anonymous(
) {
with(this){return _c('p',[_c('strong',[_v("Value proposition")]),_v(":\nprovides a patient management system for nurses to use which is faster than GUI/mouse driven apps")])}
},function anonymous(
) {
with(this){return _c('h3',{attrs:{"id":"user-stories"}},[_v("User Stories"),_c('a',{staticClass:"fa fa-anchor",attrs:{"href":"#user-stories","onclick":"event.stopPropagation()"}})])}
},function anonymous(
) {
with(this){return _c('p',[_v("Priorities: High (must have) - "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("* * *")]),_v(", Medium (nice to have) - "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("* *")]),_v(", Low (unlikely to have) - "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("*")])])}
},function anonymous(
) {
with(this){return _c('div',{staticClass:"table-responsive"},[_c('table',{staticClass:"markbind-table table table-bordered table-striped"},[_c('thead',[_c('tr',[_c('th',[_v("Priority")]),_v(" "),_c('th',[_v("As a …​")]),_v(" "),_c('th',[_v("I want to …​")]),_v(" "),_c('th',[_v("So that I can…​")])])]),_v(" "),_c('tbody',[_c('tr',[_c('td',[_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("* * *")])]),_v(" "),_c('td',[_v("Nurse")]),_v(" "),_c('td',[_v("add in emergency contact numbers")]),_v(" "),_c('td',[_v("refer to them during an emergency")])]),_v(" "),_c('tr',[_c('td',[_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("* * *")])]),_v(" "),_c('td',[_v("Nurse")]),_v(" "),_c('td',[_v("delete emergency contact numbers")]),_v(" "),_c('td',[_v("remove irrelevant emergency contacts")])]),_v(" "),_c('tr',[_c('td',[_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("* * *")])]),_v(" "),_c('td',[_v("Nurse")]),_v(" "),_c('td',[_v("assign multiple categories to a patient")]),_v(" "),_c('td',[_v("quickly identify the care level")])]),_v(" "),_c('tr',[_c('td',[_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("* * *")])]),_v(" "),_c('td',[_v("Nurse")]),_v(" "),_c('td',[_v("add tasks")]),_v(" "),_c('td',[_v("track what task needs to be done")])]),_v(" "),_c('tr',[_c('td',[_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("* * *")])]),_v(" "),_c('td',[_v("Nurse")]),_v(" "),_c('td',[_v("delete tasks")]),_v(" "),_c('td',[_v("remove irrelevant tasks")])]),_v(" "),_c('tr',[_c('td',[_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("* * *")])]),_v(" "),_c('td',[_v("Nurse")]),_v(" "),_c('td',[_v("assign priority levels to patients")]),_v(" "),_c('td',[_v("recognize which patients need more immediate attention")])]),_v(" "),_c('tr',[_c('td',[_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("* * *")])]),_v(" "),_c('td',[_v("Nurse")]),_v(" "),_c('td',[_v("add tags to patients")]),_v(" "),_c('td',[_v("recognize the allergies for each patient")])]),_v(" "),_c('tr',[_c('td',[_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("* * ")])]),_v(" "),_c('td',[_v("Nurse")]),_v(" "),_c('td',[_v("change the priority level for each patient")]),_v(" "),_c('td',[_v("reflect changes in their care status")])]),_v(" "),_c('tr',[_c('td',[_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("* * ")])]),_v(" "),_c('td',[_v("Nurse")]),_v(" "),_c('td',[_v("reset the priority level for each patient")]),_v(" "),_c('td',[_v("reflect changes in their care status")])]),_v(" "),_c('tr',[_c('td',[_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("* *")])]),_v(" "),_c('td',[_v("Nurse")]),_v(" "),_c('td',[_v("edit the name for each patient")]),_v(" "),_c('td',[_v("reflect changes in the event that the information was keyed in wrongly")])]),_v(" "),_c('tr',[_c('td',[_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("* *")])]),_v(" "),_c('td',[_v("Nurse")]),_v(" "),_c('td',[_v("edit the phone number for each patient")]),_v(" "),_c('td',[_v("reflect changes in the event that the information was keyed in wrongly")])]),_v(" "),_c('tr',[_c('td',[_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("* *")])]),_v(" "),_c('td',[_v("Nurse")]),_v(" "),_c('td',[_v("edit the emergency contact for each patient")]),_v(" "),_c('td',[_v("reflect changes in the event that the information was keyed in wrongly")])]),_v(" "),_c('tr',[_c('td',[_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("* *")])]),_v(" "),_c('td',[_v("Nurse")]),_v(" "),_c('td',[_v("edit tags for each patient")]),_v(" "),_c('td',[_v("reflect changes in their allergies")])]),_v(" "),_c('tr',[_c('td',[_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("* *")])]),_v(" "),_c('td',[_v("Nurse")]),_v(" "),_c('td',[_v("find a patient by their name")]),_v(" "),_c('td',[_v("access their details quickly without scrolling through the list")])]),_v(" "),_c('tr',[_c('td',[_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("* *")])]),_v(" "),_c('td',[_v("Nurse")]),_v(" "),_c('td',[_v("find tasks by their description")]),_v(" "),_c('td',[_v("access patients with the same task quickly without scrolling through the list")])]),_v(" "),_c('tr',[_c('td',[_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("* *")])]),_v(" "),_c('td',[_v("Nurse")]),_v(" "),_c('td',[_v("list tasks that are incomplete")]),_v(" "),_c('td',[_v("prioritize my work during the shift")])]),_v(" "),_c('tr',[_c('td',[_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("* *")])]),_v(" "),_c('td',[_v("Nurse")]),_v(" "),_c('td',[_v("list tasks that are complete")]),_v(" "),_c('td',[_v("double check that my the tasks that I have marked complete are indeed complete")])]),_v(" "),_c('tr',[_c('td',[_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("* *")])]),_v(" "),_c('td',[_v("Nurse")]),_v(" "),_c('td',[_v("mark tasks as complete")]),_v(" "),_c('td',[_v("update the tasks that I have completed")])]),_v(" "),_c('tr',[_c('td',[_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("* *")])]),_v(" "),_c('td',[_v("Nurse")]),_v(" "),_c('td',[_v("unmark tasks")]),_v(" "),_c('td',[_v("to unmark the tasks that I have accidentally marked as completed")])]),_v(" "),_c('tr',[_c('td',[_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("*")])]),_v(" "),_c('td',[_v("Nurse")]),_v(" "),_c('td',[_v("have the ability to clear all data from the system")]),_v(" "),_c('td',[_v("reset the system for a new set of patients efficiently")])]),_v(" "),_c('tr',[_c('td',[_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("*")])]),_v(" "),_c('td',[_v("Nurse")]),_v(" "),_c('td',[_v("be able to exit the program using a command")]),_v(" "),_c('td',[_v("quickly close the application when done")])]),_v(" "),_c('tr',[_c('td',[_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("*")])]),_v(" "),_c('td',[_v("Nurse")]),_v(" "),_c('td',[_v("edit the email for each patient")]),_v(" "),_c('td',[_v("reflect changes in the event that the information was keyed in wrongly")])]),_v(" "),_c('tr',[_c('td',[_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("*")])]),_v(" "),_c('td',[_v("Nurse")]),_v(" "),_c('td',[_v("edit the address for each patient")]),_v(" "),_c('td',[_v("reflect changes in the event that the information was keyed in wrongly")])])])])])}
},function anonymous(
) {
with(this){return _c('h3',{attrs:{"id":"use-cases"}},[_v("Use cases"),_c('a',{staticClass:"fa fa-anchor",attrs:{"href":"#use-cases","onclick":"event.stopPropagation()"}})])}
},function anonymous(
) {
with(this){return _c('p',[_v("(For all use cases below, the "),_c('strong',[_v("System")]),_v(" is the "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("NovaCare")]),_v(" and the "),_c('strong',[_v("Actor")]),_v(" is the "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("nurses")]),_v(", unless specified otherwise)")])}
},function anonymous(
) {
with(this){return _c('p',[_c('strong',[_v("Use Case: UC01 - Add Patient")])])}
},function anonymous(
) {
with(this){return _c('p',[_c('strong',[_v("MSS")])])}
},function anonymous(
) {
with(this){return _c('ol',[_c('li',[_c('p',[_v("Nurse requests to add patient details to the system.")])]),_v(" "),_c('li',[_c('p',[_v("NovaCare adds the patient to the list.")]),_v(" "),_c('p',[_v("Use case ends.")])])])}
},function anonymous(
) {
with(this){return _c('p',[_c('strong',[_v("Extensions")])])}
},function anonymous(
) {
with(this){return _c('ul',[_c('li',[_c('p',[_v("1a. The command format is incorrect or one or more compulsory fields (name, phone number, email or address) are omitted.")]),_v(" "),_c('ul',[_c('li',[_v("1a1. NovaCare displays an error message for incorrect command format."),_c('br'),_v("Use Case ends.")])])]),_v(" "),_c('li',[_c('p',[_v("1b. One of the parameters are invalid.")]),_v(" "),_c('ul',[_c('li',[_v("1b1. NovaCare displays an error message specific to the invalid field entry."),_c('br'),_v("Use Case ends.")])])]),_v(" "),_c('li',[_c('p',[_v("1c. A patient with identical name and phone number already exists in the list.")]),_v(" "),_c('ul',[_c('li',[_v("1c1. NovaCare displays an error message specifying the existence of a duplicate patient."),_c('br'),_v("Use Case ends.")])])])])}
},function anonymous(
) {
with(this){return _c('p',[_c('strong',[_v("Use Case: UC02 - Edit Patient")]),_v(" "),_c('strong',[_v("Preconditions: Patient list is not empty")])])}
},function anonymous(
) {
with(this){return _c('p',[_c('strong',[_v("MSS")])])}
},function anonymous(
) {
with(this){return _c('ol',[_c('li',[_c('p',[_v("Nurse requests to edit the patient details of a specific patient.")])]),_v(" "),_c('li',[_c('p',[_v("NovaCare edits the details of the specified patient in the list.")]),_v(" "),_c('p',[_v("Use case ends.")])])])}
},function anonymous(
) {
with(this){return _c('p',[_c('strong',[_v("Extensions")])])}
},function anonymous(
) {
with(this){return _c('ul',[_c('li',[_c('p',[_v("1a. The command format is incorrect.")]),_v(" "),_c('ul',[_c('li',[_v("1a1. NovaCare displays an error message for incorrect command format."),_c('br'),_v("Use Case ends.")])])]),_v(" "),_c('li',[_c('p',[_v("1b. One of the parameters are invalid.")]),_v(" "),_c('ul',[_c('li',[_v("1b1. NovaCare displays an error message specific to the invalid field entry."),_c('br'),_v("Use Case ends.")])])]),_v(" "),_c('li',[_c('p',[_v("1c. A patient with identical name and phone number already exists in the list.")]),_v(" "),_c('ul',[_c('li',[_v("1c1. NovaCare displays an error message specifying the existence of a duplicate patient."),_c('br'),_v("Use Case ends.")])])])])}
},function anonymous(
) {
with(this){return _c('p',[_c('strong',[_v("Use Case: UC03 - Delete Patient")]),_v(" "),_c('strong',[_v("Preconditions: Patient list is not empty")])])}
},function anonymous(
) {
with(this){return _c('p',[_c('strong',[_v("MSS")])])}
},function anonymous(
) {
with(this){return _c('ol',[_c('li',[_c('p',[_v("Nurse requests to edit the patient details of a specific patient.")])]),_v(" "),_c('li',[_c('p',[_v("NovaCare deletes the patient from the patient list and the tasks related to the patient in the task list.")]),_v(" "),_c('p',[_v("Use case ends.")])])])}
},function anonymous(
) {
with(this){return _c('p',[_c('strong',[_v("Extensions")])])}
},function anonymous(
) {
with(this){return _c('ul',[_c('li',[_c('p',[_v("1a. The command format is incorrect or the index is missing.")]),_v(" "),_c('ul',[_c('li',[_v("1a1. NovaCare displays an error message for incorrect command format."),_c('br'),_v("Use Case ends.")])])]),_v(" "),_c('li',[_c('p',[_v("1b. The given index is invalid.")]),_v(" "),_c('ul',[_c('li',[_v("1b1. NovaCare displays an error message specific to the invalid index."),_c('br'),_v("Use Case ends.")])])])])}
},function anonymous(
) {
with(this){return _c('p',[_c('strong',[_v("Use Case: UC04 - List Patients")])])}
},function anonymous(
) {
with(this){return _c('p',[_c('strong',[_v("MSS")])])}
},function anonymous(
) {
with(this){return _c('ol',[_c('li',[_c('p',[_v("Nurse requests to list all patient details.")])]),_v(" "),_c('li',[_c('p',[_v("NovaCare displays a list of all patient details.")]),_v(" "),_c('p',[_v("Use case ends.")])])])}
},function anonymous(
) {
with(this){return _c('p',[_c('strong',[_v("Use Case: UC05 - Find Patient(s) by Name")])])}
},function anonymous(
) {
with(this){return _c('p',[_c('strong',[_v("MSS")])])}
},function anonymous(
) {
with(this){return _c('ol',[_c('li',[_c('p',[_v("Nurse requests to find patients whose name contains "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("keywords")]),_v(".")])]),_v(" "),_c('li',[_c('p',[_v("NovaCare lists patient(s) whose name contains "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("keywords")]),_v(".")]),_v(" "),_c('p',[_v("Use case ends.")])])])}
},function anonymous(
) {
with(this){return _c('p',[_c('strong',[_v("Extensions")])])}
},function anonymous(
) {
with(this){return _c('ul',[_c('li',[_c('p',[_v("1a. The "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("keywords")]),_v(" are empty.")]),_v(" "),_c('ul',[_c('li',[_v("1a1. NovaCare displays an error message for incorrect command format."),_c('br'),_v("Use Case ends.")])])])])}
},function anonymous(
) {
with(this){return _c('p',[_c('strong',[_v("Use case: UC06 - Add Emergency contact")]),_v(" "),_c('strong',[_v("Preconditions: Patient list is not empty")])])}
},function anonymous(
) {
with(this){return _c('p',[_c('strong',[_v("MSS")])])}
},function anonymous(
) {
with(this){return _c('ol',[_c('li',[_c('p',[_v("Nurse requests to add emergency contact details to a selected patient.")])]),_v(" "),_c('li',[_c('p',[_v("NovaCare adds the emergency contact details to the selected patient.")]),_v(" "),_c('p',[_v("Use case ends.")])])])}
},function anonymous(
) {
with(this){return _c('p',[_c('strong',[_v("Extensions")])])}
},function anonymous(
) {
with(this){return _c('ul',[_c('li',[_c('p',[_v("1a. The command format is incorrect.")]),_v(" "),_c('ul',[_c('li',[_v("1a1. NovaCare displays an error message for incorrect command format."),_c('br'),_v("Use Case ends.")])])]),_v(" "),_c('li',[_c('p',[_v("1b. The given index is invalid.")]),_v(" "),_c('ul',[_c('li',[_v("1b1. NovaCare displays an error message specific to the invalid index."),_c('br'),_v("Use Case ends.")])])]),_v(" "),_c('li',[_c('p',[_v("1c. At least one of the parameters (name and/ or phone number) are invalid.")]),_v(" "),_c('ul',[_c('li',[_v("1c1. NovaCare displays an error message specific to the invalid field entry."),_c('br'),_v("Use Case ends.")])])]),_v(" "),_c('li',[_c('p',[_v("1d. NovaCare detects that the patient already has a registered emergency contact.")]),_v(" "),_c('ul',[_c('li',[_v("1d1. NovaCare displays an error message that the patient already has a registered emergency contact."),_c('br'),_v("Use Case ends.")])])])])}
},function anonymous(
) {
with(this){return _c('p',[_c('strong',[_v("Use case: UC07 - Delete Emergency contact")]),_v(" "),_c('strong',[_v("Preconditions: Patient list is not empty")])])}
},function anonymous(
) {
with(this){return _c('p',[_c('strong',[_v("MSS")])])}
},function anonymous(
) {
with(this){return _c('ol',[_c('li',[_c('p',[_v("Nurse requests to delete the emergency contact details of a selected patient.")])]),_v(" "),_c('li',[_c('p',[_v("NovaCare deletes the emergency contact details of the selected patient.")]),_v(" "),_c('p',[_v("Use case ends.")])])])}
},function anonymous(
) {
with(this){return _c('p',[_c('strong',[_v("Extensions")])])}
},function anonymous(
) {
with(this){return _c('ul',[_c('li',[_c('p',[_v("1a. The command format is incorrect.")]),_v(" "),_c('ul',[_c('li',[_v("1a1. NovaCare displays an error message for incorrect command format."),_c('br'),_v("Use Case ends.")])])]),_v(" "),_c('li',[_c('p',[_v("1b. The given index is invalid.")]),_v(" "),_c('ul',[_c('li',[_v("1b1. NovaCare displays an error message specific to the invalid index."),_c('br'),_v("Use Case ends.")])])]),_v(" "),_c('li',[_c('p',[_v("1d. NovaCare detects that the patient already does not have a registered emergency contact.")]),_v(" "),_c('ul',[_c('li',[_v("1d1. NovaCare displays an error message that the patient already does not have a registered emergency contact."),_c('br'),_v("Use case ends.")])])])])}
},function anonymous(
) {
with(this){return _c('p',[_c('strong',[_v("Use Case: UC08 - Add Priority")]),_v(" "),_c('strong',[_v("Preconditions: Patient list is not empty")])])}
},function anonymous(
) {
with(this){return _c('p',[_c('strong',[_v("MSS")])])}
},function anonymous(
) {
with(this){return _c('ol',[_c('li',[_c('p',[_v("Nurse requests to add a priority level to a specified patient.")])]),_v(" "),_c('li',[_c('p',[_v("NovaCare updates the given patient details with the entered priority level.")]),_v(" "),_c('p',[_v("Use case ends.")])])])}
},function anonymous(
) {
with(this){return _c('p',[_c('strong',[_v("Extensions")])])}
},function anonymous(
) {
with(this){return _c('ul',[_c('li',[_c('p',[_v("1a. The command format is incorrect.")]),_v(" "),_c('ul',[_c('li',[_v("1a1. NovaCare displays an error message for incorrect command format."),_c('br'),_v("Use Case ends.")])])]),_v(" "),_c('li',[_c('p',[_v("1b. The given index is invalid.")]),_v(" "),_c('ul',[_c('li',[_v("1b1. NovaCare displays an error message specific to the invalid index."),_c('br'),_v("Use Case ends.")])])])])}
},function anonymous(
) {
with(this){return _c('p',[_c('strong',[_v("Use Case: UC09 - Reset Priority")])])}
},function anonymous(
) {
with(this){return _c('p',[_c('strong',[_v("MSS")])])}
},function anonymous(
) {
with(this){return _c('ol',[_c('li',[_c('p',[_v("Nurse requests to reset a priority level of a specified patient.")])]),_v(" "),_c('li',[_c('p',[_v("NovaCare resets the given patient details with the default priority level.")]),_v(" "),_c('p',[_v("Use case ends.")])])])}
},function anonymous(
) {
with(this){return _c('p',[_c('strong',[_v("Use case: UC10 - Add Task")]),_v(" "),_c('strong',[_v("Preconditions: Patient list is not empty")])])}
},function anonymous(
) {
with(this){return _c('p',[_c('strong',[_v("MSS")])])}
},function anonymous(
) {
with(this){return _c('ol',[_c('li',[_c('p',[_v("Nurse requests to add a new task to a specific patient.")])]),_v(" "),_c('li',[_c('p',[_v("NovaCare adds the task to the task list.")]),_v(" "),_c('p',[_v("Use case ends.")])])])}
},function anonymous(
) {
with(this){return _c('p',[_c('strong',[_v("Extensions")])])}
},function anonymous(
) {
with(this){return _c('ul',[_c('li',[_c('p',[_v("1a. The command format is incorrect or the description field is empty.")]),_v(" "),_c('ul',[_c('li',[_v("1a1. NovaCare displays an error message for incorrect command format."),_c('br'),_v("Use Case ends.")])])]),_v(" "),_c('li',[_c('p',[_v("1b. The given index is invalid.")]),_v(" "),_c('ul',[_c('li',[_v("1b1. NovaCare displays an error message specific to the invalid index."),_c('br'),_v("Use Case ends.")])])])])}
},function anonymous(
) {
with(this){return _c('p',[_c('strong',[_v("Use Case: UC11 - Delete Task")]),_v(" "),_c('strong',[_v("Preconditions: Patient list and task list is not empty")])])}
},function anonymous(
) {
with(this){return _c('p',[_c('strong',[_v("MSS")])])}
},function anonymous(
) {
with(this){return _c('ol',[_c('li',[_c('p',[_v("Nurse requests to delete a new task from the task list.")])]),_v(" "),_c('li',[_c('p',[_v("NovaCare deletes the task from the task list.")]),_v(" "),_c('p',[_v("Use case ends.")])])])}
},function anonymous(
) {
with(this){return _c('p',[_c('strong',[_v("Extensions")])])}
},function anonymous(
) {
with(this){return _c('ul',[_c('li',[_c('p',[_v("1a. The command format is incorrect.")]),_v(" "),_c('ul',[_c('li',[_v("1a1. NovaCare displays an error message for incorrect command format."),_c('br'),_v("Use Case ends.")])])]),_v(" "),_c('li',[_c('p',[_v("1b. The given index is invalid.")]),_v(" "),_c('ul',[_c('li',[_v("1b1. NovaCare displays an error message specific to the invalid index."),_c('br'),_v("Use Case ends.")])])])])}
},function anonymous(
) {
with(this){return _c('p',[_c('strong',[_v("Use Case: UC12 - List Tasks")])])}
},function anonymous(
) {
with(this){return _c('p',[_c('strong',[_v("MSS")])])}
},function anonymous(
) {
with(this){return _c('ol',[_c('li',[_c('p',[_v("Nurse requests to list all tasks.")])]),_v(" "),_c('li',[_c('p',[_v("NovaCare displays a list of all tasks.")]),_v(" "),_c('p',[_v("Use case ends.")])])])}
},function anonymous(
) {
with(this){return _c('p',[_c('strong',[_v("Use Case: UC13 - Find Task(s) by Patient Index")])])}
},function anonymous(
) {
with(this){return _c('p',[_c('strong',[_v("MSS")])])}
},function anonymous(
) {
with(this){return _c('ol',[_c('li',[_c('p',[_v("Nurse requests to find tasks for a specified patient's index.")])]),_v(" "),_c('li',[_c('p',[_v("NovaCare lists task(s) under patient with the given index.")]),_v(" "),_c('p',[_v("Use case ends.")])])])}
},function anonymous(
) {
with(this){return _c('p',[_c('strong',[_v("Extensions")])])}
},function anonymous(
) {
with(this){return _c('ul',[_c('li',[_c('p',[_v("1a. The command format is incorrect.")]),_v(" "),_c('ul',[_c('li',[_v("1a1. NovaCare displays an error message for incorrect command format."),_c('br'),_v("Use Case ends.")])])]),_v(" "),_c('li',[_c('p',[_v("1b. The given index is invalid.")]),_v(" "),_c('ul',[_c('li',[_v("1b1. NovaCare displays an error message specific to the invalid index."),_c('br'),_v("Use Case ends.")])])])])}
},function anonymous(
) {
with(this){return _c('p',[_c('strong',[_v("Use Case: UC14 - Mark Task")]),_v(" "),_c('strong',[_v("Preconditions: Patient list and task list is not empty")])])}
},function anonymous(
) {
with(this){return _c('p',[_c('strong',[_v("MSS")])])}
},function anonymous(
) {
with(this){return _c('ol',[_c('li',[_c('p',[_v("Nurse requests to mark a specified task as complete.")])]),_v(" "),_c('li',[_c('p',[_v("NovaCare marks given task to be complete.")]),_v(" "),_c('p',[_v("Use case ends.")])])])}
},function anonymous(
) {
with(this){return _c('p',[_c('strong',[_v("Extensions")])])}
},function anonymous(
) {
with(this){return _c('ul',[_c('li',[_c('p',[_v("1a. The command format is incorrect.")]),_v(" "),_c('ul',[_c('li',[_v("1a1. NovaCare displays an error message for incorrect command format."),_c('br'),_v("Use Case ends.")])])]),_v(" "),_c('li',[_c('p',[_v("1b. The given index is invalid.")]),_v(" "),_c('ul',[_c('li',[_v("1b1. NovaCare displays an error message specific to the invalid index."),_c('br'),_v("Use Case ends.")])])])])}
},function anonymous(
) {
with(this){return _c('p',[_c('strong',[_v("Use Case: UC15 - Unmark Task")]),_v(" "),_c('strong',[_v("Preconditions: Patient list and task list is not empty")])])}
},function anonymous(
) {
with(this){return _c('p',[_c('strong',[_v("MSS")])])}
},function anonymous(
) {
with(this){return _c('ol',[_c('li',[_c('p',[_v("Nurse requests to unmark a specified task to be incomplete.")])]),_v(" "),_c('li',[_c('p',[_v("NovaCare unmarks given task to be incomplete.")]),_v(" "),_c('p',[_v("Use case ends.")])])])}
},function anonymous(
) {
with(this){return _c('p',[_c('strong',[_v("Extensions")])])}
},function anonymous(
) {
with(this){return _c('ul',[_c('li',[_c('p',[_v("1a. The command format is incorrect.")]),_v(" "),_c('ul',[_c('li',[_v("1a1. NovaCare displays an error message for incorrect command format."),_c('br'),_v("Use Case ends.")])])]),_v(" "),_c('li',[_c('p',[_v("1b. The given index is invalid.")]),_v(" "),_c('ul',[_c('li',[_v("1b1. NovaCare displays an error message specific to the invalid index."),_c('br'),_v("Use Case ends.")])])])])}
},function anonymous(
) {
with(this){return _c('p',[_c('strong',[_v("Use Case: UC16 - List Incomplete Tasks")])])}
},function anonymous(
) {
with(this){return _c('p',[_c('strong',[_v("MSS")])])}
},function anonymous(
) {
with(this){return _c('ol',[_c('li',[_c('p',[_v("Nurse requests to list all incomplete tasks.")])]),_v(" "),_c('li',[_c('p',[_v("NovaCare displays a list of all incomplete tasks.")]),_v(" "),_c('p',[_v("Use case ends.")])])])}
},function anonymous(
) {
with(this){return _c('p',[_c('strong',[_v("Use Case: UC17 - Clear All Patients and Tasks")])])}
},function anonymous(
) {
with(this){return _c('p',[_c('strong',[_v("MSS")])])}
},function anonymous(
) {
with(this){return _c('ol',[_c('li',[_c('p',[_v("Nurse requests to clear all patients and tasks in NovaCare.")])]),_v(" "),_c('li',[_c('p',[_v("NovaCare clears all patient and task data.")]),_v(" "),_c('p',[_v("Use case ends.")])])])}
},function anonymous(
) {
with(this){return _c('h3',{attrs:{"id":"non-functional-requirements"}},[_v("Non-Functional Requirements"),_c('a',{staticClass:"fa fa-anchor",attrs:{"href":"#non-functional-requirements","onclick":"event.stopPropagation()"}})])}
},function anonymous(
) {
with(this){return _c('ol',[_c('li',[_v("Should work on any "),_c('em',[_v("mainstream OS")]),_v(" as long as it has Java "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("17")]),_v(" or above installed.")]),_v(" "),_c('li',[_v("Should be able to hold up to 1000 patients without a noticeable sluggishness in performance for typical usage.")]),_v(" "),_c('li',[_v("Should be able to hold up to 1000 tasks without a noticeable sluggishness in performance for typical usage.")]),_v(" "),_c('li',[_v("A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.")]),_v(" "),_c('li',[_v("The GUI should work well for standard screen resolutions 1920x1080 and higher, and for screen scales 100% and 125%.")]),_v(" "),_c('li',[_v("The codebase should be modular, allowing easy updates or feature additions without affecting other parts of the system.")]),_v(" "),_c('li',[_v("The application should be packaged as a single jar file for easy deployment.")]),_v(" "),_c('li',[_v("The User Guide and Developer Guide should be PDF-friendly. No animated GIFs, embbedded videos, etc.")]),_v(" "),_c('li',[_v("The data should be stored in a local file in an editable text file that is easy to read and edit manually.")]),_v(" "),_c('li',[_v("The data should not be stored in a Database Management System.")]),_v(" "),_c('li',[_v("The application should function without internet access as it is an offline tool.")]),_v(" "),_c('li',[_v("The application should run for extended periods without crashing.")])])}
},function anonymous(
) {
with(this){return _c('h3',{attrs:{"id":"glossary"}},[_v("Glossary"),_c('a',{staticClass:"fa fa-anchor",attrs:{"href":"#glossary","onclick":"event.stopPropagation()"}})])}
},function anonymous(
) {
with(this){return _c('ul',[_c('li',[_c('strong',[_v("Mainstream OS")]),_v(": Windows, Linux, Unix, MacOS")]),_v(" "),_c('li',[_c('strong',[_v("Private contact detail")]),_v(": A contact detail that is not meant to be shared with others")]),_v(" "),_c('li',[_c('strong',[_v("Priority level")]),_v(": A priority level is a value assigned to a patient to indicate the urgency of their medical condition. A priority level of 1 indicates a critical condition, 2 indicates a serious but non-critical condition, while 3 indicates a non-critical condition.")]),_v(" "),_c('li',[_c('strong',[_v("Emergency contact")]),_v(": A person who is preferably close to the patient and is designated to receive information in case of an emergency")]),_v(" "),_c('li',[_c('strong',[_v("Task")]),_v(": A task to be done for a specific patient")]),_v(" "),_c('li',[_c('strong',[_v("Database Management System")]),_v(": A software system that uses a standard method to store and organize data.")])])}
},function anonymous(
) {
with(this){return _c('h2',{attrs:{"id":"appendix-instructions-for-manual-testing"}},[_c('strong',[_v("Appendix: Instructions for Manual Testing")]),_c('a',{staticClass:"fa fa-anchor",attrs:{"href":"#appendix-instructions-for-manual-testing","onclick":"event.stopPropagation()"}})])}
},function anonymous(
) {
with(this){return _c('h3',{attrs:{"id":"launch-and-shutdown"}},[_v("Launch and Shutdown"),_c('a',{staticClass:"fa fa-anchor",attrs:{"href":"#launch-and-shutdown","onclick":"event.stopPropagation()"}})])}
},function anonymous(
) {
with(this){return _c('ol',[_c('li',[_c('p',[_v("Initial launch")]),_v(" "),_c('ol',[_c('li',[_v("Download the jar file and copy into an empty folder.")]),_v(" "),_c('li',[_v("Open a terminal and navigate to the folder containing the jar file.")]),_v(" "),_c('li',[_v("Run the command "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("java -jar NovaCare.jar")]),_c('br'),_v("Expected: The app launches with a set of sample patients. The window size may not be optimal."),_c('br'),_c('br')])])]),_v(" "),_c('li',[_c('p',[_v("Saving window preferences")]),_v(" "),_c('ol',[_c('li',[_v("Resize the window to an optimum size. Move the window to a different location. Close the window.")]),_v(" "),_c('li',[_v("Re-launch the app by running the command "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("java -jar NovaCare.jar")]),_v("."),_c('br'),_v("Expected: The most recent window size and location is retained.")])])])])}
},function anonymous(
) {
with(this){return _c('h3',{attrs:{"id":"adding-a-patient"}},[_v("Adding a Patient"),_c('a',{staticClass:"fa fa-anchor",attrs:{"href":"#adding-a-patient","onclick":"event.stopPropagation()"}})])}
},function anonymous(
) {
with(this){return _c('ol',[_c('li',[_v("Test case: "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("add n/John Doe p/11111111 e/johndoe@example.com a/Blk 2 Bishan St 11 #06-230 t/Diabetic")]),_v(" "),_c('ul',[_c('li',[_v("Expected: New patient added with confirmation message"),_c('br'),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("New patient added: John Doe; Phone: 11111111; Email: johndoe@example.com; Address: Blk 2 Bishan St 11 #06-230; Tags: [Diabetic]")])])])]),_v(" "),_c('li',[_v("Test case: Add the same patient as above\n"),_c('ul',[_c('li',[_v("Expected: Error message"),_c('br'),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("This patient already exists in the NovaCare")])])])]),_v(" "),_c('li',[_v("Test case: "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("add n/John Doe e/johndoe@example.com a/Blk 2 Bishan St 11 #06-230 t/Diabetic")]),_v(" "),_c('ul',[_c('li',[_v("Expected: Error message"),_c('br'),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Invalid command format!")]),_c('br'),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("add: Adds a patient to the NovaCare. Parameters: n/NAME p/PHONE e/EMAIL a/ADDRESS [t/TAG]...")]),_c('br'),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Example: add n/John Doe p/98765432 e/johnd@example.com a/311, Clementi Ave 2, #02-25 t/Diabetic")])])])]),_v(" "),_c('li',[_v("Test case: "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("add n/John Doe p/invalid e/johndoe@example.com a/Blk 2 Bishan St 11 #06-230 t/Diabetic")]),_v(" "),_c('ul',[_c('li',[_v("Expected: Error message specific to invalid field"),_c('br'),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Phone numbers should only contain numbers, and it should be at least 3 digits long")])])])]),_v(" "),_c('li',[_v("Other incorrect add commands to try: Any inputs with missing or invalid compulsory fields (name, phone number, email and address)\n"),_c('ul',[_c('li',[_v("Expected: Similar to test cases 3 and 4")])])])])}
},function anonymous(
) {
with(this){return _c('h3',{attrs:{"id":"deleting-a-patient"}},[_v("Deleting a Patient"),_c('a',{staticClass:"fa fa-anchor",attrs:{"href":"#deleting-a-patient","onclick":"event.stopPropagation()"}})])}
},function anonymous(
) {
with(this){return _c('p',[_v("Deleting a patient while all patients are being shown"),_c('br')])}
},function anonymous(
) {
with(this){return _c('p',[_v("Prerequisites: List all patients using the "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("list")]),_v(" command. Multiple patients in the list.")])}
},function anonymous(
) {
with(this){return _c('ol',[_c('li',[_v("Test case: "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("delete 1")]),_v(" "),_c('ul',[_c('li',[_v("Expected: First contact is deleted from the list. Confirmation details of the deleted patient shown in the status message.")])])]),_v(" "),_c('li',[_v("Test case: "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("delete 0")]),_v(" "),_c('ul',[_c('li',[_v("Expected: Error message"),_c('br'),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Invalid command format!")]),_c('br'),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("delete: Deletes the patient identified by the index number used in the displayed patient list.")]),_c('br'),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Parameters: INDEX (must be a positive integer)")]),_c('br'),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Example: delete 1")])])])]),_v(" "),_c('li',[_v("Test case: "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("delete x")]),_v(", where "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("x")]),_v(" is a number larger than the size of the patient list\n"),_c('ul',[_c('li',[_v("Expected: Error message"),_c('br'),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("The patient index provided is invalid")])])])]),_v(" "),_c('li',[_v("Other incorrect delete commands to try: "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("delete")]),_v(", "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("delete test")]),_v(" "),_c('ul',[_c('li',[_v("Expected: Similar to test case 2")])])])])}
},function anonymous(
) {
with(this){return _c('h3',{attrs:{"id":"editing-a-patient"}},[_v("Editing a Patient"),_c('a',{staticClass:"fa fa-anchor",attrs:{"href":"#editing-a-patient","onclick":"event.stopPropagation()"}})])}
},function anonymous(
) {
with(this){return _c('p',[_v("Editing a patient's details while all patients are being shown"),_c('br')])}
},function anonymous(
) {
with(this){return _c('p',[_v("Prerequisites: List all patients using the "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("list")]),_v(" command. At least 1 patient in the list.")])}
},function anonymous(
) {
with(this){return _c('ol',[_c('li',[_v("Test case: "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("edit 1 p/22222222 e/john.doe@example.com")]),_v(" "),_c('ul',[_c('li',[_v("Expected: Second patient in the list has their phone number and email edited. Confirmation details of the deleted patient shown in the status message.")])])]),_v(" "),_c('li',[_v("Test case: "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("edit 0 n/Test")]),_v(" "),_c('ul',[_c('li',[_v("Expected: Error message"),_c('br'),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Invalid command format!")]),_c('br'),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("edit: Edits the details of the patient identified by the index number used in the displayed patient list. Existing values will be overwritten by the input values.")]),_c('br'),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Parameters: INDEX (must be a positive integer) [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]...")]),_c('br'),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Example: edit 1 p/91234567 e/johndoe@example.com")])])])]),_v(" "),_c('li',[_v("Test case: "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("edit x n/Test")]),_v(", where "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("x")]),_v(" is a number larger than the size of the patient list\n"),_c('ul',[_c('li',[_v("Expected: Error message"),_c('br'),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("The patient index provided is invalid")])])])]),_v(" "),_c('li',[_v("Test case: "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("edit 1")]),_v(" "),_c('ul',[_c('li',[_v("Expected: Error message"),_c('br'),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("At least one field to edit must be provided.")])])])]),_v(" "),_c('li',[_v("Test case: "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("edit 1 n/")]),_v(" "),_c('ul',[_c('li',[_v("Expected: Error message specific to invalid field"),_c('br'),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Names should only contain alphanumeric characters and spaces, and it should not be blank")])])])]),_v(" "),_c('li',[_v("Test case: Edit patient to have the same name and phone number as another patient in the patient list\n"),_c('ul',[_c('li',[_v("Expected: Error message"),_c('br'),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("This patient already exists in the NovaCare")])])])]),_v(" "),_c('li',[_v("Other correct edit commands to try: Any inputs with valid fields\n"),_c('ul',[_c('li',[_v("Expected: Simmilar to test case 1")])])]),_v(" "),_c('li',[_v("Other incorrect delete commands to try: Any inputs with invalid fields\n"),_c('ul',[_c('li',[_v("Expected: Similar to test case 5")])])])])}
},function anonymous(
) {
with(this){return _c('h3',{attrs:{"id":"finding-a-patient"}},[_v("Finding a Patient"),_c('a',{staticClass:"fa fa-anchor",attrs:{"href":"#finding-a-patient","onclick":"event.stopPropagation()"}})])}
},function anonymous(
) {
with(this){return _c('p',[_v("Finding a patient while all patients are being shown"),_c('br')])}
},function anonymous(
) {
with(this){return _c('p',[_v("Prerequisites: List all patients using the "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("list")]),_v(" command. Multiple patients in the list. One patient with first name "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("John")]),_v(", another patient with last name "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Doe")]),_v(", no patients with first or last name "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Richard")]),_v(".")])}
},function anonymous(
) {
with(this){return _c('ol',[_c('li',[_v("Test case: "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("find John Doe")]),_v(" "),_c('ul',[_c('li',[_v("Expected: NovaCare lists all patients with first or last name as "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("John")]),_v(" or "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Doe")]),_v(", with a success message"),_c('br'),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("2 patients listed!")])])])]),_v(" "),_c('li',[_v("Test case: "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("find david")]),_v(" "),_c('ul',[_c('li',[_v("Expected: No patients listed, with message"),_c('br'),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("The patient list is empty.")])])])]),_v(" "),_c('li',[_v("Test case: "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("find")]),_v(" "),_c('ul',[_c('li',[_v("Expected: Error message"),_c('br'),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Invalid command format!")]),_c('br'),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("find: Finds all patients whose names contain any of the specified keywords (case-insensitive) and displays them as a list with index numbers.")]),_c('br'),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Parameters: KEYWORD [MORE_KEYWORDS]...")]),_c('br'),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Example: find alice bob charlie")])])])]),_v(" "),_c('li',[_v("Other incorrect delete commands to try: Any other inputs with patient names not in the patient list\n"),_c('ul',[_c('li',[_v("Expected: Similar to test case 2")])])])])}
},function anonymous(
) {
with(this){return _c('h3',{attrs:{"id":"changing-resetting-priority-level"}},[_v("Changing/ Resetting Priority Level"),_c('a',{staticClass:"fa fa-anchor",attrs:{"href":"#changing-resetting-priority-level","onclick":"event.stopPropagation()"}})])}
},function anonymous(
) {
with(this){return _c('p',[_v("Prerequisites: List all patients using the "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("list")]),_v(" command. At least 1 patient in the list.")])}
},function anonymous(
) {
with(this){return _c('ol',[_c('li',[_v("Test case: "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("priority 1 l/1")]),_v(" "),_c('ul',[_c('li',[_v("Expected: Priority level 1 is assigned to the patient with index 1. Details of the priority update are displayed in the status message"),_c('br'),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Priority level 1 successfully set for John Doe")])])])]),_v(" "),_c('li',[_v("Test case: "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("priority 1 l/reset")]),_v(" "),_c('ul',[_c('li',[_v("Expected: Priority level reset to 3 for the patient with index 1. Details of the priority update are displayed in the status message"),_c('br'),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Priority level reset to default for John Doe")])])])]),_v(" "),_c('li',[_v("Test case: "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("deletelevel 1")]),_v(" "),_c('ul',[_c('li',[_v("Expected: Priority level reset to 3 for the patient with index 1. Details of the priority update are displayed in the status message"),_c('br'),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Priority level reset to default for John Doe")])])])]),_v(" "),_c('li',[_v("Test case: "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("priority x l/2")]),_v(" where "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("x")]),_v(" is less than or equals to 0 or a number larger than the size of the patient list\n"),_c('ul',[_c('li',[_v("Expected: Error message"),_c('br'),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Invalid patient ID. Please enter a valid patient identifier.")])])])]),_v(" "),_c('li',[_v("Test case: "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("priority")]),_v(" "),_c('ul',[_c('li',[_v("Expected: Error message"),_c('br'),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Invalid command format!")]),_c('br'),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("priority: Sets the priority level for a patient identified by the index number used in the displayed patient list.")]),_c('br'),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Parameters: INDEX l/LEVEL (LEVEL must be 1, 2, or 3 or 'reset' for default level)")]),_c('br'),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Example: priority 1 l/2")]),_c('br'),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Example: priority 2 l/reset")])])])]),_v(" "),_c('li',[_v("Test case: "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("priority 1 l/x")]),_v(" where "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("x")]),_v(" is not "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("1")]),_v(", "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("2")]),_v(", "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("3")]),_v(" or "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("reset")]),_v(" "),_c('ul',[_c('li',[_v("Expected: Error message"),_c('br'),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Invalid priority level. Please enter a valid integer (1, 2, or 3) or 'reset'.")])])])]),_v(" "),_c('li',[_v("Other incorrect priority commands to try: "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("priority 1 l/")]),_v(" "),_c('ul',[_c('li',[_v("Expected: Similar to test case 6")])])])])}
},function anonymous(
) {
with(this){return _c('h3',{attrs:{"id":"adding-emergency-contact"}},[_v("Adding Emergency Contact"),_c('a',{staticClass:"fa fa-anchor",attrs:{"href":"#adding-emergency-contact","onclick":"event.stopPropagation()"}})])}
},function anonymous(
) {
with(this){return _c('p',[_v("Prerequisites: List all patients using the "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("list")]),_v(" command. At least 1 patient in the list.")])}
},function anonymous(
) {
with(this){return _c('ol',[_c('li',[_v("Test case: "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("emergency 1 n/Charlotte Doe p/33333333")]),_v(" "),_c('ul',[_c('li',[_v("Expected: Emergency contact with name "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Charlotte Doe")]),_v(" and number "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("33333333")]),_v(" added to patient with index 1. Details of the emergency contact update are displayed in the status message"),_c('br'),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Added emergency contact to John Doe: Charlotte Doe, 33333333")])])])]),_v(" "),_c('li',[_v("Test case: Add another emergency contact to the same patient as above\n"),_c('ul',[_c('li',[_v("Expected: Error message"),_c('br'),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("John Doe already has a saved emergency contact")])])])]),_v(" "),_c('li',[_v("Test case: "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("emergency")]),_v(" "),_c('ul',[_c('li',[_v("Expected: Error message"),_c('br'),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Invalid command format!")]),_c('br'),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("emergency: Edits the emergency contact details of the patient identified by the index number used in the last patient listing.")]),_c('br'),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Parameters: INDEX (must be a positive integer) n/[EMERGENCY CONTACT NAME]p/[EMERGENCY CONTACT NUMBER")]),_c('br'),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Example: emergency 1 n/Richard Ng p/82943718")])])])]),_v(" "),_c('li',[_v("Test case: "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("emergency x n/Charlotte Doe p/33333333")]),_v(" where "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("x")]),_v(" a number larger than the size of the patient list\n"),_c('ul',[_c('li',[_v("Expected: Error message"),_c('br'),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("The patient index provided is invalid")])])])]),_v(" "),_c('li',[_v("Test case: "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("emergency 1 n/Charlotte Doe")]),_v(" "),_c('ul',[_c('li',[_v("Expected: Error message"),_c('br'),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Please make sure both name and phone number is filled! Command details:")]),_c('br'),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("emergency: Edits the emergency contact details of the patient identified by the index number used in the last patient listing.")]),_c('br'),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Parameters: INDEX (must be a positive integer) n/[EMERGENCY CONTACT NAME]p/[EMERGENCY CONTACT NUMBER")]),_c('br'),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Example: emergency 1 n/Richard Ng p/82943718")])])])]),_v(" "),_c('li',[_v("Test case: "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("emergency 1 n/Charlotte Doe p/1")]),_v(" "),_c('ul',[_c('li',[_v("Expected: Error message specific to invalid field"),_c('br'),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Phone numbers should only contain numbers, and it should be at least 3 digits long")])])])]),_v(" "),_c('li',[_v("Other incorrect priority commands to try: Any other inputs with either missing or invalid name or phone number fields\n"),_c('ul',[_c('li',[_v("Expected: Similar to test cases 5 and 6")])])])])}
},function anonymous(
) {
with(this){return _c('h3',{attrs:{"id":"deleting-emergency-contact"}},[_v("Deleting Emergency Contact"),_c('a',{staticClass:"fa fa-anchor",attrs:{"href":"#deleting-emergency-contact","onclick":"event.stopPropagation()"}})])}
},function anonymous(
) {
with(this){return _c('p',[_v("Prerequisites: List all patients using the "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("list")]),_v(" command. At least 1 patient in the list.")])}
},function anonymous(
) {
with(this){return _c('ol',[_c('li',[_v("Test case: "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("deleteemergency 1")]),_v(" "),_c('ul',[_c('li',[_v("Expected: Emergency contact of patient with index 1 is deleted. Details of the emergency contact deletion are displayed in the status message"),_c('br'),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Removed emergency contact (Charlotte Doe, 33333333) from John Doe")])])])]),_v(" "),_c('li',[_v("Test case: Delete emergency contact for the same patient as above\n"),_c('ul',[_c('li',[_v("Expected: Error message"),_c('br'),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("John Doe does not have a saved emergency contact")])])])]),_v(" "),_c('li',[_v("Test case: "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("deleteemergency")]),_v(" "),_c('ul',[_c('li',[_v("Expected: Error message"),_c('br'),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Invalid command format!")]),_c('br'),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("deleteemergency: Deletes the emergency contact details of the patient identified by the index number used in the last patient listing.")]),_c('br'),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Parameters: INDEX (must be a positive integer)")]),_c('br'),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Example: deleteemergency 1")])])])]),_v(" "),_c('li',[_v("Test case: "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("deleteemergency x")]),_v(" where "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("x")]),_v(" a number larger than the size of the patient list\n"),_c('ul',[_c('li',[_v("Expected: Error message"),_c('br'),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("The patient index provided is invalid")]),_v("\n5Other incorrect priority commands to try: "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("deleteemergency 0")]),_v(", "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("deleteemergency test")])]),_v(" "),_c('li',[_v("Expected: Similar to test case 3")])])])])}
},function anonymous(
) {
with(this){return _c('h3',{attrs:{"id":"adding-a-task"}},[_v("Adding a Task"),_c('a',{staticClass:"fa fa-anchor",attrs:{"href":"#adding-a-task","onclick":"event.stopPropagation()"}})])}
},function anonymous(
) {
with(this){return _c('p',[_v("Prerequisites: List all patients using the "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("list")]),_v(" command. At least 1 patient in the list.")])}
},function anonymous(
) {
with(this){return _c('ol',[_c('li',[_v("Test case: "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("addtask 1 d/Check blood pressure")]),_v(" "),_c('ul',[_c('li',[_v("Expected: Task \"Check blood pressure\" is added to the task list for the patient with index 1. Details of the added task are displayed in the status message"),_c('br'),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("New task added: Check blood pressure")])])])]),_v(" "),_c('li',[_v("Test case: Add the same task as above\n"),_c('ul',[_c('li',[_v("Expected: Error message"),_c('br'),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("This task already exists in the task list")])])])]),_v(" "),_c('li',[_v("Test case: "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("addtask")]),_v(" "),_c('ul',[_c('li',[_v("Expected: Error message"),_c('br'),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Invalid command format!")]),_c('br'),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("addtask: Adds a task to the task list. Parameters: INDEX d/DESCRIPTION")]),_c('br'),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Example: addtask 1 d/Buy medication")])])])]),_v(" "),_c('li',[_v("Test case: "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("addtask x d/Check blood pressure")]),_v(" where "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("x")]),_v(" a number larger than the size of the patient list\n"),_c('ul',[_c('li',[_v("Expected: Error message"),_c('br'),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("The patient index provided is invalid")])])])]),_v(" "),_c('li',[_v("Other incorrect add task commands to try: "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("addtask 1 d/")]),_v(", "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("addtask 0 d/Check blood pressure")]),_v(" "),_c('ul',[_c('li',[_v("Expected: Similar to test case 3")])])])])}
},function anonymous(
) {
with(this){return _c('h3',{attrs:{"id":"deleting-a-task"}},[_v("Deleting a Task"),_c('a',{staticClass:"fa fa-anchor",attrs:{"href":"#deleting-a-task","onclick":"event.stopPropagation()"}})])}
},function anonymous(
) {
with(this){return _c('p',[_v("Prerequisites: List all patients using the "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("list")]),_v(" command. At least 1 patient in the list.")])}
},function anonymous(
) {
with(this){return _c('ol',[_c('li',[_v("Test case: "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("deletetask 1")]),_v(" "),_c('ul',[_c('li',[_v("Expected: Deletes task with index 1 in the task list. Details of the deleted task are displayed in the status message"),_c('br'),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Deleted Task: Check blood pressure for John Doe")])])])]),_v(" "),_c('li',[_v("Test case: "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("deletetask")]),_v(" "),_c('ul',[_c('li',[_v("Expected: Error message"),_c('br'),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Invalid command format!")]),_c('br'),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("deletetask: Deletes the task identified by the index number used in the displayed task list.")]),_c('br'),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Parameters: INDEX (must be a positive integer)")]),_c('br'),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Example: deletetask 1")])])])]),_v(" "),_c('li',[_v("Test case: "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("deletetask x")]),_v(" where "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("x")]),_v(" a number larger than the size of the task list\n"),_c('ul',[_c('li',[_v("Expected: Error message"),_c('br'),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("The task index provided is invalid")])])])]),_v(" "),_c('li',[_v("Other incorrect add task commands to try: "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("deletetask 0")]),_v(", "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("deletetask test")]),_v(" "),_c('ul',[_c('li',[_v("Expected: Similar to test case 2")])])])])}
},function anonymous(
) {
with(this){return _c('h3',{attrs:{"id":"finding-a-task"}},[_v("Finding a Task"),_c('a',{staticClass:"fa fa-anchor",attrs:{"href":"#finding-a-task","onclick":"event.stopPropagation()"}})])}
},function anonymous(
) {
with(this){return _c('p',[_v("Prerequisites: List all patients using the "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("list")]),_v(" command. At least 1 patient in the list and a task for patient with index 1.")])}
},function anonymous(
) {
with(this){return _c('ol',[_c('li',[_v("Test case: "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("findtask 1")]),_v(" "),_c('ul',[_c('li',[_v("Expected: Task(s) for the patient with index 1 is/ are listed in the task list, with a success message"),_c('br'),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("1 tasks listed!")])])])]),_v(" "),_c('li',[_v("Test case: "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("findtask")]),_v(" "),_c('ul',[_c('li',[_v("Expected: Error message"),_c('br'),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Invalid command format!")]),_c('br'),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("findtask: Finds all tasks related to the patient identified by the index number used in the displayed patient list and displays them as a list with index numbers.")]),_c('br'),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Parameters: PATIENT_INDEX (must be a positive integer)")]),_c('br'),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Example: findtask 1")])])])]),_v(" "),_c('li',[_v("Test case: "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("findtask x")]),_v(" where "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("x")]),_v(" a number larger than the size of the patient list\n"),_c('ul',[_c('li',[_v("Expected: Error message"),_c('br'),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("The patient index provided is invalid")])])])]),_v(" "),_c('li',[_v("Other incorrect add task commands to try: "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("findtask 0")]),_v(", "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("findtask test")]),_v(" "),_c('ul',[_c('li',[_v("Expected: Similar to test case 2")])])])])}
},function anonymous(
) {
with(this){return _c('h3',{attrs:{"id":"marking-a-task"}},[_v("Marking a Task"),_c('a',{staticClass:"fa fa-anchor",attrs:{"href":"#marking-a-task","onclick":"event.stopPropagation()"}})])}
},function anonymous(
) {
with(this){return _c('p',[_v("Prerequisites: List all patients using the "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("list")]),_v(" command. At least 1 patient in the list and an unmarked task for patient with index 1.")])}
},function anonymous(
) {
with(this){return _c('ol',[_c('li',[_v("Test case: "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("marktask 1")]),_v(" "),_c('ul',[_c('li',[_v("Expected: Task for the patient with index 1 is marked in the task list, with success message"),_c('br'),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Marked task as complete: Check blood pressure for John Doe")])])])]),_v(" "),_c('li',[_v("Test case: "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("marktask")]),_v(" "),_c('ul',[_c('li',[_v("Expected: Error message"),_c('br'),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Invalid command format!")]),_c('br'),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("marktask: Marks the task identified by the index number used in the displayed task list as complete.")]),_c('br'),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Parameters: INDEX (must be a positive integer)")]),_c('br'),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Example: marktask 1")])])])]),_v(" "),_c('li',[_v("Test case: "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("marktask x")]),_v(" where "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("x")]),_v(" a number larger than the size of the task list\n"),_c('ul',[_c('li',[_v("Expected: Error message"),_c('br'),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("The task index provided is invalid")])])])]),_v(" "),_c('li',[_v("Other incorrect add task commands to try: "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("marktask 0")]),_v(", "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("marktask test")]),_v(" "),_c('ul',[_c('li',[_v("Expected: Similar to test case 2")])])])])}
},function anonymous(
) {
with(this){return _c('h3',{attrs:{"id":"unmarking-a-task"}},[_v("Unmarking a Task"),_c('a',{staticClass:"fa fa-anchor",attrs:{"href":"#unmarking-a-task","onclick":"event.stopPropagation()"}})])}
},function anonymous(
) {
with(this){return _c('p',[_v("Prerequisites: List all patients using the "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("list")]),_v(" command. At least 1 patient in the list and a marked task for patient with index 1.")])}
},function anonymous(
) {
with(this){return _c('ol',[_c('li',[_v("Test case: "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("unmarktask 1")]),_v(" "),_c('ul',[_c('li',[_v("Expected: Task for the patient with index 1 is unmarked in the task list, with success message"),_c('br'),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Marked task as incomplete: Check blood pressure for John Doe")])])])]),_v(" "),_c('li',[_v("Test case: "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("unmarktask")]),_v(" "),_c('ul',[_c('li',[_v("Expected: Error message"),_c('br'),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Invalid command format!")]),_c('br'),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("unmarktask: Marks the task identified by the index number used in the displayed task list as incomplete.")]),_c('br'),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Parameters: INDEX (must be a positive integer)")]),_c('br'),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Example: unmarktask 1")])])])]),_v(" "),_c('li',[_v("Test case: "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("unmarktask x")]),_v(" where "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("x")]),_v(" a number larger than the size of the task list\n"),_c('ul',[_c('li',[_v("Expected: Error message"),_c('br'),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("The task index provided is invalid")])])])]),_v(" "),_c('li',[_v("Other incorrect add task commands to try: "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("unmarktask 0")]),_v(", "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("unmarktask test")]),_v(" "),_c('ul',[_c('li',[_v("Expected: Similar to test case 2")])])])])}
},function anonymous(
) {
with(this){return _c('h3',{attrs:{"id":"listing-all-incomplete-tasks"}},[_v("Listing all Incomplete Tasks"),_c('a',{staticClass:"fa fa-anchor",attrs:{"href":"#listing-all-incomplete-tasks","onclick":"event.stopPropagation()"}})])}
},function anonymous(
) {
with(this){return _c('p',[_v("Prerequisites: List all patients using the "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("list")]),_v(" command. At least 1 patient in the list and one marked and unmarked task each for the patient with index 1.")])}
},function anonymous(
) {
with(this){return _c('ol',[_c('li',[_v("Test case: "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("listincomplete")]),_v(" "),_c('ul',[_c('li',[_v("Expected: All incomplete tasks in the task list are displayed, with success message"),_c('br'),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Listed all incomplete tasks")])])])])])}
},function anonymous(
) {
with(this){return _c('h3',{attrs:{"id":"saving-data"}},[_v("Saving data"),_c('a',{staticClass:"fa fa-anchor",attrs:{"href":"#saving-data","onclick":"event.stopPropagation()"}})])}
},function anonymous(
) {
with(this){return _c('ol',[_c('li',[_c('p',[_v("All data is written to file called "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("addressbook.json")])]),_v(" "),_c('ol',[_c('li',[_v("By default, the data is saved in the file "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("\"addressbook.json\"")]),_v(", found in the "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("data")]),_v(" folder.")]),_v(" "),_c('li',[_v("Whenever a command is used to modify the data (e.g., "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("add")]),_v(", "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("delete")]),_v(", "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("edit")]),_v("), the data is saved into the file.")])])]),_v(" "),_c('li',[_c('p',[_v("Dealing with missing data file")]),_v(" "),_c('ol',[_c('li',[_v("To simulate a missing file, in the same folder as the "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("NovaCare.jar")]),_v(" file, navigate to the "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("data")]),_v(" folder and delete the addressbook.json file in the folder.")]),_v(" "),_c('li',[_v("Re-launch NovaCare.\n"),_c('ul',[_c('li',[_v("Expected: NovaCare will be re-populated with a default list of patients. A new addressbook.json file will be created in the data folder after closing the app or executing a command.")])])])])]),_v(" "),_c('li',[_c('p',[_v("Dealing with corrupted data entries")]),_v(" "),_c('ol',[_c('li',[_v("To simulate a corrupted data entry, in the same folder as the "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("NovaCare.jar")]),_v(" file, navigate to the "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("data")]),_v(" folder and open the addressbook.json file in the folder. Edit one of the compulsory fields such as phone number to be invalid (e.g. change the phone number to \"d\"). Save the addressbook.json file.")]),_v(" "),_c('li',[_v("Re-launch NovaCare.\n"),_c('ul',[_c('li',[_v("Expected: NovaCare will launch, making sure to skip the invalid entry. The invalid entry will be removed from the addressbook.json file after executing a command.")])])])])])])}
},function anonymous(
) {
with(this){return _c('h2',{attrs:{"id":"appendix-planned-enhancements"}},[_c('strong',[_v("Appendix: Planned Enhancements")]),_c('a',{staticClass:"fa fa-anchor",attrs:{"href":"#appendix-planned-enhancements","onclick":"event.stopPropagation()"}})])}
},function anonymous(
) {
with(this){return _c('ol',[_c('li',[_c('strong',[_v("Implement stricter email validation:")]),_v(" "),_c('ul',[_c('li',[_v("Currently, NovaCare's email validation only requires two alphanumeric characters for the "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("DOMAIN")]),_v(", allowing invalid email formats such as "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("username@example")]),_v(". This flaw compromises data accuracy and can lead to incorrect contact details, which is critical in a healthcare setting where reliable communication is essential.")]),_v(" "),_c('li',[_v("We plan to enhance the email validation logic to enforce a domain format of "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("<subdomain>.<top-level domain>")]),_v(", in which the top-level domain label must be at least 2 characters long. Each domain label must start and end with alphanumeric characters and consist of alphanumeric characters, separated only by hyphens, if any.")]),_v(" "),_c('li',[_v("For example:\n"),_c('ul',[_c('li',[_v("✅ "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("username1@example.sg")])]),_v(" "),_c('li',[_v("✅ "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("username-2@example.com")])]),_v(" "),_c('li',[_v("✅ "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("username-3@example.com")])]),_v(" "),_c('li',[_v("✅ "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("username4@test.example.org\"")])]),_v(" "),_c('li',[_v("❌ "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("username1@example")]),_c('br'),_c('br')])])])])]),_v(" "),_c('li',[_c('strong',[_v("Implement more robust phone number validation:")]),_v(" "),_c('ul',[_c('li',[_v("Currently, NovaCare's phone number validation only requires for entries to be numeric, and at least 3 digits long. This means that the system accepts phone number entries that exceed the upper limit of possible phone number lengths, and also disallows entries that try and input country code, i.e. "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("+6512345678")]),_v(", since phone numbers must be strictly numeric. This flaw could cause data entry errors, especially for international contacts.")]),_v(" "),_c('li',[_v("As phone numbers are both used in a patient's phone field and in the emergency contact number field, this flaw affects two fields in the NovaCare.")]),_v(" "),_c('li',[_v("We plan to enhance the phone number validation logic to allow the usage of the "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("+")]),_v(" character only as the first character of the phone number, and to limit the length of the phone number entered.")]),_v(" "),_c('li',[_v("For example:\n"),_c('ul',[_c('li',[_v("✅ "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("+6512345678")])]),_v(" "),_c('li',[_v("✅ "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("+601123456789")])]),_v(" "),_c('li',[_v("❌ "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("111+111")])]),_v(" "),_c('li',[_v("❌ "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("11111111111111111111")]),_c('br'),_c('br')])])])])]),_v(" "),_c('li',[_c('strong',[_v("Implement more robust name validation:")]),_v(" "),_c('ul',[_c('li',[_v("Currently, names in NovaCare can only contain alphanumeric characters and spaces, limiting inclusivity by excluding names with special characters such as hyphens or slashes. This flaw may reduce inclusivity, which is essential for a healthcare application.")]),_v(" "),_c('li',[_v("As names are both used in a patient's name field and in the emergency contact name field, this flaw affects two fields in the NovaCare.")]),_v(" "),_c('li',[_v("We plan to enhance the name validation logic to allow the usage of the "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("-")]),_v(" and "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("/")]),_v(" character, but not as the first or lsat characters of any word in the name.")]),_v(" "),_c('li',[_v("For example:\n"),_c('ul',[_c('li',[_v("✅ "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Simon Andy-Fletcher")])]),_v(" "),_c('li',[_v("✅ "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Ravi s/o Indra")])]),_v(" "),_c('li',[_v("❌ "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Timothy /Ng")])]),_v(" "),_c('li',[_v("❌ "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("-Lim En An")]),_c('br'),_c('br')])])])])]),_v(" "),_c('li',[_c('strong',[_v("Implement stricter validation for duplicate description prefixes ("),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("d/")]),_v(") in task commands:")]),_v(" "),_c('ul',[_c('li',[_v("Currently, NovaCare allows multiple "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("d/")]),_v(" prefixes in the "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("addtask")]),_v(" command without flagging it as an error, as NovaCare will accept any task descriptions after the last prefix "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("d/")]),_v(". This can lead to unintended behavior, where only the last "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("d/")]),_v(" prefix is considered as the task description, while earlier prefixes and text are ignored.")]),_v(" "),_c('li',[_v("Although unlikely that users will enter an additional "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("d/")]),_v(", we are aware that this behavior can result in data inconsistencies and confusion for users, especially if they unintentionally use multiple description prefixes, thinking all information will be stored.")]),_v(" "),_c('li',[_v("For example:\n"),_c('ul',[_c('li',[_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("addtask 1 d/first d/second")]),_v(" will only store \"second\" as the task description.")]),_v(" "),_c('li',[_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("addtask 1 d/ p/task")]),_v(" will store \"p/task\" as the description.")]),_v(" "),_c('li',[_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("addtask 1 d/ d/first")]),_v(" will store \"first\" as the description.")])])]),_v(" "),_c('li',[_v("We plan to enhance the command parsing logic to detect and disallow multiple occurrences of the "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("d/")]),_v(" prefix within a single command. If duplicate prefixes are detected, the system will throw an error message explaining the issue to the user, helping to ensure command clarity and data integrity.")]),_v(" "),_c('li',[_v("For example:\n"),_c('ul',[_c('li',[_v("✅ "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("addtask 1 d/task description")])]),_v(" "),_c('li',[_v("✅ "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("addtask 1 d/Doctor appointment at p/2 physiotherapy room")])]),_v(" "),_c('li',[_v("❌ "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("addtask 1 d/first d/second")]),_v(" (Error: Duplicate "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("d/")]),_v(" prefix detected)")]),_v(" "),_c('li',[_v("❌ "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("addtask 1 d/    d/first")]),_v(" (Error: Duplicate "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("d/")]),_v(" prefix detected)")]),_v(" "),_c('li',[_v("❌ "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("addtask 1 d/d/first")]),_v(" (Error: Duplicate "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("d/")]),_v(" prefix detected)"),_c('br'),_c('br')])])])])]),_v(" "),_c('li',[_c('strong',[_v("Edit displayed error message for priority command when index is invalid:")]),_v(" "),_c('ul',[_c('li',[_v("Currently, when an invalid index (i.e. an index greater than the size of the patient list) is entered with the priority command, The error message "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Invalid patient ID. Please enter a valid patient identifier.")]),_v(" is displayed.")]),_v(" "),_c('li',[_v("However, for other commands when an invalid index is used, the error message "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("The patient index provided is invalid")]),_v(" is displayed instead.")]),_v(" "),_c('li',[_v("We plan to edit the displayed error message for the priority command, to ensure consistency in error messages by using similar terminology throughout the system.")])])]),_v(" "),_c('li',[_c('strong',[_v("Change "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("deletelevel")]),_v(" command to "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("resetpriority")]),_v(":")]),_v(" "),_c('ul',[_c('li',[_v("Currently, the "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("deletelevel")]),_v(" command is used to reset a patient's given priority level to level 3, which is the default level.")]),_v(" "),_c('li',[_v("As "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("deletelevel")]),_v(" actually resets a patient's priority level, we plan to change the command to "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("resetpriority")]),_v(" which is more indicative of the command's usage, improving clarity.")])])]),_v(" "),_c('li',[_c('strong',[_v("Add "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("sortpriority")]),_v(" feature:")]),_v(" "),_c('ul',[_c('li',[_v("Currently, nurses can use the "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("priority")]),_v(" command to label each patient with a priority level from 1 to 3, with 1 being of the highest priority.")]),_v(" "),_c('li',[_v("To add on to the priority feature, we plan to implement a "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("sortpriority")]),_v(" feature, in which calling "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("sortpriority")]),_v(" will sort the displayed patient list by priority level, with patient's that are priority level 1 at the top of the list.")]),_v(" "),_c('li',[_v("This enhancement will allow nurses to sort their patient list based on highest priority patients, helping them pay more attention to the patients who require more care.")])])]),_v(" "),_c('li',[_c('strong',[_v("Implement an \"Edit Emergency Contact\" command:")]),_v(" "),_c('ul',[_c('li',[_v("Currently, NovaCare does not provide a way to edit an existing emergency contact directly. Users must delete the emergency contact and add a new one to make any updates, which is inconvenient and time-consuming, especially for minor edits such as updating a phone number or correcting a name spelling.")]),_v(" "),_c('li',[_v("We propose introducing a new "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("editemergency")]),_v(" command that allows users to edit specific fields of an emergency contact (e.g., name, phone number) without the need to delete and re-add the contact. This enhancement will improve user experience by streamlining contact management.")]),_v(" "),_c('li',[_v("For example:\n"),_c('ul',[_c('li',[_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("editemergency 1 n/New Name")]),_v(" - Edits the name of the emergency contact for patient with index 1.")]),_v(" "),_c('li',[_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("editemergency 2 p/98765432")]),_v(" - Updates the phone number for the emergency contact associated with patient with index 2.")]),_v(" "),_c('li',[_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("editemergency 3 n/Updated Name p/98765431")]),_v(" - Allows multiple fields to be edited in one command.")])])]),_v(" "),_c('li',[_v("This new command will check for valid input in each field and ensure that the specified emergency contact exists for the given patient ID before making any changes. Error messages will be displayed for any invalid input or if the specified emergency contact does not exist.")]),_v(" "),_c('li',[_v("For example:\n"),_c('ul',[_c('li',[_v("✅ "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("editemergency 1 n/John Doe")])]),_v(" "),_c('li',[_v("✅ "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("editemergency 2 n/John Doe p/91234567")])]),_v(" "),_c('li',[_v("✅ "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("editemergency 3 p/91234567")])]),_v(" "),_c('li',[_v("❌ "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("editemergency 1 n/")]),_v(" (Error: Name cannot be empty)")]),_v(" "),_c('li',[_v("❌ "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("editemergency 3")]),_v(" (Error: Command requires at least one field to edit)"),_c('br'),_c('br')])])])])])])}
},function anonymous(
) {
with(this){return _c('footer',[_c('div',{staticClass:"text-center"},[_c('small',[_v("["),_c('span',[_c('strong',[_v("Powered by")])]),_v(" "),_c('img',{attrs:{"src":"https://markbind.org/favicon.ico","width":"30"}}),_v(" "),_c('a',{attrs:{"href":"https://markbind.org/"}},[_v("MarkBind 5.5.3")]),_v(", generated on Mon, 11 Nov 2024, 22:30:46 GMT+8]")])])])}
}];
  